{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/Butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/icp.png","path":"img/icp.png","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/ClickShowText.js","path":"js/third-party/ClickShowText.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/activate-power-mode.js","path":"js/third-party/activate-power-mode.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/canvas-nest.js","path":"js/third-party/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/canvas-ribbon.js","path":"js/third-party/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/click_heart.js","path":"js/third-party/click_heart.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/fireworks.js","path":"js/third-party/fireworks.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/piao.js","path":"js/third-party/piao.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/touxiang.png","path":"img/touxiang.png","modified":0,"renderable":1},{"_id":"source/categories/index/fenlei.jpeg","path":"categories/index/fenlei.jpeg","modified":0,"renderable":0},{"_id":"source/tags/index/biaoqian.jpeg","path":"tags/index/biaoqian.jpeg","modified":0,"renderable":0},{"_id":"source/categories/index/fenlei2.jpg","path":"categories/index/fenlei2.jpg","modified":0,"renderable":0},{"_id":"source/archives/index/time.jpg","path":"archives/index/time.jpg","modified":0,"renderable":0},{"_id":"themes/Butterfly/source/img/bc.jpg","path":"img/bc.jpg","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/12.28_1.gif","path":"img/12.28_1.gif","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/alipay.png","path":"img/alipay.png","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/wechars.png","path":"img/wechars.png","modified":1,"renderable":1},{"_id":"themes/Butterfly/source/img/zhifubao.png","path":"img/zhifubao.png","modified":1,"renderable":1}],"Cache":[{"_id":"themes/Butterfly/README.md","hash":"31708ead9c9a494d5fa2c8ec5fc3cf675f13240e","modified":1589789285808},{"_id":"themes/Butterfly/LICENSE","hash":"e7e7b7677bb19563a9013e936486bdefeb761d07","modified":1589789285806},{"_id":"themes/Butterfly/_config.yml","hash":"e7fbd206ac6723648e54c78d934fd443c8525c85","modified":1590137071022},{"_id":"themes/Butterfly/README_CN.md","hash":"6f42d4ab0dfd564eb7b434867812c9f4a4e163cc","modified":1589789285809},{"_id":"themes/Butterfly/package.json","hash":"56e967481d2996e4618455cf372e592884f929b1","modified":1589789285907},{"_id":"source/_posts/life2020-5-19.md","hash":"0c0aad7e73205a1b233c9419a6c99c062eb17795","modified":1590039662221},{"_id":"themes/Butterfly/.github/ISSUE_TEMPLATE.md","hash":"8f7a0f8d4bfc97ba106128828a33a9cc0a295194","modified":1589789285802},{"_id":"themes/Butterfly/.github/stale.yml","hash":"70467ce772e68de57a4bf2ac285f1c0b122f25f5","modified":1589789285804},{"_id":"themes/Butterfly/languages/default.yml","hash":"3492594f5aed8ab7ee46c212bc1030b8140c4682","modified":1589789285813},{"_id":"themes/Butterfly/languages/en.yml","hash":"3492594f5aed8ab7ee46c212bc1030b8140c4682","modified":1589789285815},{"_id":"themes/Butterfly/languages/zh-CN.yml","hash":"8357b7df13116f7e60a6fc78b2641b12d9c91765","modified":1590043156820},{"_id":"themes/Butterfly/languages/zh-TW.yml","hash":"430789bde19a81103eddaa50b68376a3080a2cac","modified":1589789285818},{"_id":"themes/Butterfly/layout/404.pug","hash":"2d58b62240a5ea1119cc19e647e9a17efe1c7243","modified":1589789285820},{"_id":"themes/Butterfly/layout/category.pug","hash":"90e56274a7c853f6f30337011f9c9d6d035950dc","modified":1589789285823},{"_id":"themes/Butterfly/layout/archive.pug","hash":"2d5bf4b1755f89898c579c18d601be83d2bc8ebd","modified":1589789285822},{"_id":"themes/Butterfly/layout/flink.pug","hash":"391c3af22057ddd2a44da475710e6ff7866d954e","modified":1589789285825},{"_id":"themes/Butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1589789285892},{"_id":"themes/Butterfly/layout/page.pug","hash":"5cef945ed21199da6950cb3806d1faa45d3130c1","modified":1589789285906},{"_id":"themes/Butterfly/layout/post.pug","hash":"ace5cefcd90d34e09119bedb064c34238f653687","modified":1589789285907},{"_id":"themes/Butterfly/layout/tag.pug","hash":"e658aa76a11d1e18ec00131d9cec1a38b3d6a62e","modified":1589789285907},{"_id":"themes/Butterfly/layout/includes/additional-js.pug","hash":"0537eb7e279c213430518e0674a380769d52f425","modified":1589789285827},{"_id":"themes/Butterfly/layout/includes/footer.pug","hash":"9d98c38f1634987ef22a3cdb391b1f9fa2f806d2","modified":1589789285837},{"_id":"themes/Butterfly/layout/includes/head.pug","hash":"47b70ee674f8c6a07139f1915e6c4fc0d6f31ab5","modified":1589789285838},{"_id":"themes/Butterfly/layout/includes/layout.pug","hash":"603a800d85acfd533fca8603fc49c86a4caa10a0","modified":1589789285858},{"_id":"themes/Butterfly/layout/includes/pagination.pug","hash":"fa6b9b365c75120b90e069e439843b9def8c7ee5","modified":1589789285872},{"_id":"themes/Butterfly/layout/includes/rightside.pug","hash":"418349c6a31f246d91aab53640ded1ae674463aa","modified":1589789285875},{"_id":"themes/Butterfly/layout/includes/sidebar.pug","hash":"3981532dfffb57d00e3ebf5f590a2094d426898a","modified":1589789285884},{"_id":"themes/Butterfly/scripts/events/404.js","hash":"5f6127ede7d139891208340b5cf5bf9314e4be7d","modified":1589789285908},{"_id":"themes/Butterfly/scripts/events/replace_config.js","hash":"39fabaae6943bbafb8248ee81ae9b32e1145c84a","modified":1589789285909},{"_id":"themes/Butterfly/scripts/filters/post_lazyload.js","hash":"e2bd91061e7481c6fa787de22257744172508ece","modified":1589789285910},{"_id":"themes/Butterfly/scripts/filters/random_cover.js","hash":"8e44ec5c9a50b01790186cb6c319b70a42581add","modified":1589789285910},{"_id":"themes/Butterfly/scripts/helpers/aside_archives.js","hash":"45be3eda5fc8c3fcf70cb13beece28ae3884b721","modified":1589789285911},{"_id":"themes/Butterfly/scripts/helpers/aside_categories.js","hash":"625ef99594006b4ac6b721fa6a7da785b3dd4770","modified":1589789285911},{"_id":"themes/Butterfly/scripts/helpers/page.js","hash":"4e6cffc4ecf5c600dc50b5677a21c3569e2ed043","modified":1589789285912},{"_id":"themes/Butterfly/scripts/helpers/related_post.js","hash":"e770feb749ac76214ce1fb42579ecda68e80e433","modified":1589789285913},{"_id":"themes/Butterfly/scripts/tags/gallery.js","hash":"1735602a8da89b3ee961899c0eb4c9e6116b580c","modified":1589789285914},{"_id":"themes/Butterfly/scripts/tags/hide.js","hash":"92ee53c76906a2d661ccdf68058c20ab2c048b15","modified":1589789285915},{"_id":"themes/Butterfly/scripts/tags/mermaid.js","hash":"46d3c4c6a38d750d1ad9ca695d6c0df62b7107d6","modified":1589789285916},{"_id":"themes/Butterfly/scripts/tags/note.js","hash":"b6acc0f4f994692d124c7a251a2606afde3fcf9d","modified":1589789285917},{"_id":"themes/Butterfly/source/css/index.styl","hash":"14161794cdd22414641239a09e2db613f1999d00","modified":1589789285962},{"_id":"themes/Butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1589789285965},{"_id":"themes/Butterfly/source/css/var.styl","hash":"4314b50a909c4e47fc767e50e8f1798754436062","modified":1589789285963},{"_id":"themes/Butterfly/source/img/algolia.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1589789285966},{"_id":"themes/Butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1589789285967},{"_id":"themes/Butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1589789285968},{"_id":"themes/Butterfly/source/img/icp.png","hash":"cb1fd69b38ec23ce8366668ddffbbd0160de0104","modified":1589789285970},{"_id":"themes/Butterfly/source/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1589789285985},{"_id":"themes/Butterfly/source/js/main.js","hash":"b6343a3fd916672bfad295f939504fe632ec1cd8","modified":1589789285987},{"_id":"themes/Butterfly/source/js/tw_cn.js","hash":"0a48ec7f2b01f2ea3f86a12af63a7399cbfaccd6","modified":1589789286002},{"_id":"themes/Butterfly/source/js/utils.js","hash":"e640956180cc604948e76979cdaab40286e4a04e","modified":1589789286003},{"_id":"themes/Butterfly/layout/includes/comments/disqus.pug","hash":"5ae50a271fe5a49f4012555657db028b7113612b","modified":1589789285829},{"_id":"themes/Butterfly/layout/includes/comments/disqusjs.pug","hash":"e96dd925a1d17cfb4fe5ac13561982c9b13d6b53","modified":1589789285830},{"_id":"themes/Butterfly/layout/includes/comments/facebook_comments.pug","hash":"9d4ed57b91ad520b95d220980add8477ce968618","modified":1589789285831},{"_id":"themes/Butterfly/layout/includes/comments/gitalk.pug","hash":"bb4de1b40ae07b27dda4e3e529687f6c1a9196ca","modified":1589789285832},{"_id":"themes/Butterfly/layout/includes/comments/index.pug","hash":"43aa3a3087ffcf319a06043c00e1cd8fbd071d79","modified":1589789285833},{"_id":"themes/Butterfly/layout/includes/comments/laibili.pug","hash":"1d5d1b2cf17271cc6d69071f6df11fe477ae8bb3","modified":1589789285834},{"_id":"themes/Butterfly/layout/includes/comments/utterances.pug","hash":"8ef3dc1a27c19645ac054e30594ed1930b1c56f0","modified":1589789285835},{"_id":"themes/Butterfly/layout/includes/comments/valine.pug","hash":"6d930ef62b44f9789f25a81b1baae8f1a0988e1d","modified":1589789285836},{"_id":"themes/Butterfly/layout/includes/head/Open_Graph.pug","hash":"6f6bc88b300d22b18c7b1a1ab3b75661040dcf44","modified":1589789285840},{"_id":"themes/Butterfly/layout/includes/head/analytics.pug","hash":"036213b05df9e51250c2734854de7a096a9ed8c2","modified":1589789285841},{"_id":"themes/Butterfly/layout/includes/head/comment.pug","hash":"2dbb3378929e2f1ead3bbc4a88fafd72c6632ff8","modified":1589789285842},{"_id":"themes/Butterfly/layout/includes/head/config.pug","hash":"9265b536774344e4e58747bba62286b361d0279d","modified":1589789285843},{"_id":"themes/Butterfly/layout/includes/head/config_site.pug","hash":"4dea5574fa33f688a2a80d4e070e6c0ba9a62480","modified":1589789285844},{"_id":"themes/Butterfly/layout/includes/head/darkmode.pug","hash":"e44d63ee21b7ee247927f0189a783ffa9ba075fd","modified":1589789285845},{"_id":"themes/Butterfly/layout/includes/head/dns_prefetch.pug","hash":"9e86a17cf4dfc9191bba550dd27f874f4c2180fb","modified":1589789285846},{"_id":"themes/Butterfly/layout/includes/head/google_adsense.pug","hash":"393e641a35174f26318b8724eddaf1a0b1386636","modified":1589789285847},{"_id":"themes/Butterfly/layout/includes/head/noscript.pug","hash":"a84dac02e9d30c9c8e7ed895214d46cf2d2af3db","modified":1589789285848},{"_id":"themes/Butterfly/layout/includes/head/site_verification.pug","hash":"2d267fcc926505fcc5ebc9f59146555b32654c7e","modified":1589789285850},{"_id":"themes/Butterfly/layout/includes/head/pwa.pug","hash":"e4fb9e5c72ca05d595f0959893c2fe03b8f478e2","modified":1589789285849},{"_id":"themes/Butterfly/layout/includes/head/subtitle.pug","hash":"a305d861db7951ea8b7961f8528bca453d850b16","modified":1589789285851},{"_id":"themes/Butterfly/layout/includes/header/header.pug","hash":"8011ca7bc0d218f6cfed2e84dd8b91be05886451","modified":1589789285853},{"_id":"themes/Butterfly/layout/includes/header/index.pug","hash":"12461e6c7efcf0135e0a6fd85f425606818d4f19","modified":1589789285854},{"_id":"themes/Butterfly/layout/includes/header/menu_item.pug","hash":"4a57762f9b5ce4f30088d2552a61a016acdc93ca","modified":1589789285855},{"_id":"themes/Butterfly/layout/includes/header/post-info.pug","hash":"2bee87cc95078baeab85dd5efec9b0bebb2170f5","modified":1589789285856},{"_id":"themes/Butterfly/layout/includes/header/social.pug","hash":"0758817464c300f785384ea21bf096f5010c4f96","modified":1589789285857},{"_id":"themes/Butterfly/layout/includes/loading/loading-js.pug","hash":"3a605e29a0607c315c0566f2a1c6487b4aa98140","modified":1589789285860},{"_id":"themes/Butterfly/layout/includes/math/index.pug","hash":"403601a903d02ef0a103d18909a6eb0b088fcb4c","modified":1589789285863},{"_id":"themes/Butterfly/layout/includes/loading/loading.pug","hash":"dd8e6813976be64e80eba6562b54e74527ab306d","modified":1589789285861},{"_id":"themes/Butterfly/layout/includes/math/katex.pug","hash":"60bd18e051a442d5ce25325a55982922ab15be04","modified":1589789285864},{"_id":"themes/Butterfly/layout/includes/math/mathjax.pug","hash":"9f10622c73c2c87d3502660eb933af654d2600b4","modified":1589789285865},{"_id":"themes/Butterfly/layout/includes/math/mermaid.pug","hash":"41f6c6c9d753ed97ab2adef47f13595f8aebb464","modified":1589789285865},{"_id":"themes/Butterfly/layout/includes/mixins/article-sort.pug","hash":"15e2c600f7ded4ffdcaa94ef728f22d883fe6038","modified":1589789285867},{"_id":"themes/Butterfly/layout/includes/mixins/post-ui.pug","hash":"648b09cc1c2c1720033b4eab1936d44070e398db","modified":1589789285868},{"_id":"themes/Butterfly/layout/includes/mobile-sidebar/index.pug","hash":"e9eacd936c259d8f10e1becdd6e3ca129ea0e942","modified":1589789285870},{"_id":"themes/Butterfly/layout/includes/mobile-sidebar/mobile-menus.pug","hash":"06e87ad69670c1090210b3e4df86a2ada98553bc","modified":1589789285871},{"_id":"themes/Butterfly/layout/includes/post/post-copyright.pug","hash":"547a2737cd3ac45272a75561f5b5438d72d10f6d","modified":1589789285873},{"_id":"themes/Butterfly/layout/includes/post/reward.pug","hash":"ed228c196ceaae30e78818e06ce8f29617cf9ec7","modified":1589789285874},{"_id":"themes/Butterfly/layout/includes/search/algolia.pug","hash":"3d2b2de0e199ab1fb151f41f2bbaac909f3d3d12","modified":1589789285877},{"_id":"themes/Butterfly/layout/includes/search/index.pug","hash":"66b4f4e8119e987cd3f9907298689a1408a05859","modified":1589789285878},{"_id":"themes/Butterfly/layout/includes/search/local-search.pug","hash":"e24b08e7253e78d3088d7267188a1ca18b6b5315","modified":1589789285879},{"_id":"themes/Butterfly/layout/includes/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1589789285880},{"_id":"themes/Butterfly/layout/includes/share/addtoany.pug","hash":"4108ab6b91461254901f19ed3e5e082e437324aa","modified":1589789285881},{"_id":"themes/Butterfly/layout/includes/share/index.pug","hash":"af2f09d374a55983d1ac695848ccfae50629f439","modified":1589789285882},{"_id":"themes/Butterfly/layout/includes/share/share-js.pug","hash":"43643295be651fb3d2cd88ebf81544fde3131489","modified":1589789285883},{"_id":"themes/Butterfly/layout/includes/third-party/canvas-nest.pug","hash":"3d7a3654ae03fd2665ea355ee9eac48af0ee82af","modified":1589789285886},{"_id":"themes/Butterfly/layout/includes/third-party/canvas-ribbon-piao.pug","hash":"001f28c633d2ec2d5ef9ca047fb1fe61ffefd66f","modified":1589789285887},{"_id":"themes/Butterfly/layout/includes/third-party/canvas-ribbon.pug","hash":"74fc2a62e125f28947ec9cd60f968023da766adb","modified":1589789285888},{"_id":"themes/Butterfly/layout/includes/third-party/pangu.pug","hash":"2ea7c6070fc0f028b59c6ac4fbc80b4c3f36ced1","modified":1589789285888},{"_id":"themes/Butterfly/layout/includes/widget/card_ad.pug","hash":"44af3c7a67b86f048deacb451dd454b088631374","modified":1589789285889},{"_id":"themes/Butterfly/layout/includes/widget/card_announcement.pug","hash":"c70faf9ac87bb168cf1107b2039eb6dda00fae47","modified":1589789285889},{"_id":"themes/Butterfly/layout/includes/widget/card_archives.pug","hash":"f7caa98b0da316e167a6ce07d659f85db81c64ae","modified":1589789285889},{"_id":"themes/Butterfly/layout/includes/widget/card_author.pug","hash":"11704f1748e0316c89f09dd708f440d39ceef0cd","modified":1589789285890},{"_id":"themes/Butterfly/layout/includes/widget/card_categories.pug","hash":"bab10df1427b07a176afb28f1258080e4ab573ee","modified":1589789285890},{"_id":"themes/Butterfly/layout/includes/widget/card_recent_post.pug","hash":"348dc65683132b768f2340380a1ba71504aa8e43","modified":1589789285890},{"_id":"themes/Butterfly/layout/includes/widget/card_tags.pug","hash":"d4532e5f6417d9ba2ebe054521410f80f64a968b","modified":1589789285891},{"_id":"themes/Butterfly/layout/includes/widget/card_webinfo.pug","hash":"b31f88fff690ec8efbbb8163eb01abed98a6ae0f","modified":1589789285891},{"_id":"themes/Butterfly/layout/includes/widget/index.pug","hash":"6ef8482c9e8b9ac3ab06e48e69853ac536836905","modified":1589789285891},{"_id":"themes/Butterfly/source/css/_highlight/diff.styl","hash":"bb83b379954dc2e7f5a9915e5ed50da7223e3efa","modified":1589789285922},{"_id":"themes/Butterfly/source/css/_highlight/highlight.styl","hash":"e56379c713d7e175a8486ee43940039f2f1c9fa6","modified":1589789285923},{"_id":"themes/Butterfly/source/css/_highlight/theme.styl","hash":"32b94940c8288020bb4245941ca587c8aad7c14c","modified":1589789285932},{"_id":"themes/Butterfly/source/css/_layout/404.styl","hash":"f5875982abf021213e1274f615b812b29b5fee56","modified":1589789285934},{"_id":"themes/Butterfly/source/css/_layout/aside.styl","hash":"cf4ed5fe1e675f5440e07a6bc1afa49b53e38d5e","modified":1589789285935},{"_id":"themes/Butterfly/source/css/_layout/category.styl","hash":"b5bca389c3185b2794939f0f5dd889e1ed72f6cc","modified":1589789285936},{"_id":"themes/Butterfly/source/css/_layout/flink.styl","hash":"926d4ff56a0b19ae7d3d7ea39212aeb5d0f1841d","modified":1589789285938},{"_id":"themes/Butterfly/source/css/_layout/footer.styl","hash":"2dace492e6da44e39ad5cc7eae8bc8bb5a34aaae","modified":1589789285939},{"_id":"themes/Butterfly/source/css/_layout/loadding.styl","hash":"7acbbed062bf4070ef998e760491f436b2629738","modified":1589789285941},{"_id":"themes/Butterfly/source/css/_layout/head.styl","hash":"c526b35696518d017211ab6fd84716ac2aca9135","modified":1589789285940},{"_id":"themes/Butterfly/source/css/_layout/mobile-sidebar.styl","hash":"92c7d42d2fc74f6eab4879a367c1b71634f4f493","modified":1589789285942},{"_id":"themes/Butterfly/source/css/_layout/pagination.styl","hash":"9181061f214ed8e2b48c203e1d3d524edc4b56e7","modified":1589789285944},{"_id":"themes/Butterfly/source/css/_layout/post.styl","hash":"8ee3929503586dc9a8d454cc30ee77f8258befd9","modified":1589789285945},{"_id":"themes/Butterfly/source/css/_layout/relatedposts.styl","hash":"1799a33e3f7cdc543227be833d59ef84bb038124","modified":1589789285946},{"_id":"themes/Butterfly/source/css/_layout/reward.styl","hash":"0df33f37f7339df71b68a6b781c068e5a344c9cc","modified":1589789285947},{"_id":"themes/Butterfly/source/css/_layout/rightside.styl","hash":"4c27911ff1432870f328934cf6b171ecb16db1ce","modified":1589789285948},{"_id":"themes/Butterfly/source/css/_layout/page.styl","hash":"f2292e7fc76e8064bf442c34b31b0a237692cd60","modified":1589789285943},{"_id":"themes/Butterfly/source/css/_global/index.styl","hash":"043cadea27a7856d50fb64a83d3c50c21b8e5a14","modified":1589789285920},{"_id":"themes/Butterfly/source/css/_layout/sidebar.styl","hash":"d1ad6bbdedf8bead2b0b18519629c731afbab49d","modified":1589789285949},{"_id":"themes/Butterfly/source/css/_layout/third-party.styl","hash":"583d22f17f1b1f823b757ef32b67f29f7442ea3d","modified":1589789285949},{"_id":"themes/Butterfly/source/css/_mode/darkmode.styl","hash":"d63038b9b9b9eca05e566162d0a8877119768cac","modified":1589789285951},{"_id":"themes/Butterfly/source/css/_mode/readmode.styl","hash":"c5f6f2f4116a3c98fe70ae68717fccd081ccdf5b","modified":1589789285952},{"_id":"themes/Butterfly/source/css/_search/algolia.styl","hash":"55fc3a91dfbd8f15aab2595fb0c68d3981edb629","modified":1589789285954},{"_id":"themes/Butterfly/source/css/_search/index.styl","hash":"f6f4a7bdaa7199fa521b0d67049a10473d792136","modified":1589789285955},{"_id":"themes/Butterfly/source/css/_search/local-search.styl","hash":"0c293c8e72ec7e2432d46eef666b8db16ca6e826","modified":1589789285955},{"_id":"themes/Butterfly/source/css/_tags/gallery.styl","hash":"192bd09d0b6db688467ebead95d0ebec7d3eba06","modified":1589789285957},{"_id":"themes/Butterfly/source/css/_tags/hide.styl","hash":"b64752f484fa4503ba8303cfa7b1f89fbd5dfebb","modified":1589789285958},{"_id":"themes/Butterfly/source/css/_tags/note.styl","hash":"b522d071c320c0aa52fd56f30b0bc9cf923e46d7","modified":1589789285959},{"_id":"themes/Butterfly/source/css/_third-party/normalize.min.css","hash":"001bd6d68a9b9af5dd0158fe116889434f36b1fd","modified":1589789285961},{"_id":"themes/Butterfly/source/js/search/algolia.js","hash":"a4aa32db60e5cc12bbe3b3a82209379bf8ab62ce","modified":1589789285989},{"_id":"themes/Butterfly/source/js/third-party/ClickShowText.js","hash":"2af6ddbabdd36979cc9c05b117452a1534702c6d","modified":1589789285993},{"_id":"themes/Butterfly/source/js/third-party/activate-power-mode.js","hash":"2c4ab494225b7d04eed934efc43a43791e596f4a","modified":1589789285994},{"_id":"themes/Butterfly/source/js/third-party/canvas-nest.js","hash":"ed2a7dedc314eb1047d030be2e95d0d5679bc577","modified":1589789285995},{"_id":"themes/Butterfly/source/js/third-party/canvas-ribbon.js","hash":"8fe48c40c6147811cda154db8b7a3352132bfceb","modified":1589789285997},{"_id":"themes/Butterfly/source/js/third-party/click_heart.js","hash":"7295ee03e9ae40f855d0c494a9b84e76a36ffe20","modified":1589789285998},{"_id":"themes/Butterfly/source/js/third-party/fireworks.js","hash":"75b3d7025c01947f3d425e592e910458393ee621","modified":1589789285999},{"_id":"themes/Butterfly/source/js/third-party/piao.js","hash":"bc3d3f2afeefea55d9d6ba8dfa798435e1eb1062","modified":1589789286000},{"_id":"themes/Butterfly/source/js/search/local-search.js","hash":"7ed0e03733127dd34dc251f5b36e3e7eadd73097","modified":1589789285991},{"_id":"source/_posts/life2020-5-19/life.jpg","hash":"aedc5a51ff924948f6d1090137a4cb757f94d4ea","modified":1590039277795},{"_id":"public/2020/05/21/life2020-5-19/index.html","hash":"fc171a222db2d2429bf9fe6883d4888962fba61c","modified":1590039732302},{"_id":"public/archives/index.html","hash":"6879dcb76046282aea6f7e9121906f634328d7bc","modified":1590137075975},{"_id":"public/archives/2020/index.html","hash":"19f3e1586fbde86aa1281f4345d99b9490e45743","modified":1590137075975},{"_id":"public/archives/2020/05/index.html","hash":"5ef22c3ebb3441e20b20d0a4b0cea56adee4096a","modified":1590137075975},{"_id":"public/index.html","hash":"059683fa08009d83760d09fd0a96992c3447dbf7","modified":1590137075975},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1590039732302},{"_id":"public/img/algolia.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1590039732302},{"_id":"public/img/icp.png","hash":"cb1fd69b38ec23ce8366668ddffbbd0160de0104","modified":1590039732302},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1590039732302},{"_id":"public/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1590039732302},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1590039732302},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1590039732302},{"_id":"public/js/search/algolia.js","hash":"09219d497f54c834ec506a4f63d02f6cad7c2dc7","modified":1590039732302},{"_id":"public/js/utils.js","hash":"1906e1b61590368aa567e7064ff7f2492b57b257","modified":1590039732302},{"_id":"public/js/third-party/activate-power-mode.js","hash":"2c4ab494225b7d04eed934efc43a43791e596f4a","modified":1590039732302},{"_id":"public/js/third-party/ClickShowText.js","hash":"32864aee35b5d739a36702b8d916b17bac52b17e","modified":1590039732302},{"_id":"public/js/third-party/canvas-ribbon.js","hash":"2496200178510a12b2436947a93bb15120560937","modified":1590039732302},{"_id":"public/js/third-party/canvas-nest.js","hash":"978402a16f3ceebe453806e3e25a5905a89776be","modified":1590039732302},{"_id":"public/js/third-party/fireworks.js","hash":"411ced4031a856a5b87f7c62d3800027d12bacec","modified":1590039732302},{"_id":"public/js/third-party/click_heart.js","hash":"004ea645ed8c5e354711b5fc0dbfe015e181916b","modified":1590039732302},{"_id":"public/js/third-party/piao.js","hash":"05da3437664bb335e2336a52be8587e7719f7b89","modified":1590039732302},{"_id":"public/js/search/local-search.js","hash":"497993860b3c42bdc926a3bd83b4b8f480febd99","modified":1590039732302},{"_id":"public/css/index.css","hash":"3141ba756ba262922e275b4496d861b3d6e5be7a","modified":1590039732302},{"_id":"public/js/main.js","hash":"8a398625427c6dc3d2d23b55faa4ebbd8f45cea4","modified":1590039732302},{"_id":"public/js/tw_cn.js","hash":"d468bf1634950ed1ffd7cedd3c87f2037e27543f","modified":1590039732302},{"_id":"public/2020/05/21/life2020-5-19/life.jpg","hash":"aedc5a51ff924948f6d1090137a4cb757f94d4ea","modified":1590039732302},{"_id":"source/_posts/life20200519/life.jpg","hash":"aedc5a51ff924948f6d1090137a4cb757f94d4ea","modified":1590039277795},{"_id":"source/_posts/life20200519.md","hash":"36f3584238d2e4322af027f9af1ef2dc1ea423e0","modified":1590136086436},{"_id":"source/tags/index.md","hash":"e8e996d6d90eae51812d8789079f205a2f5c9509","modified":1590043742134},{"_id":"source/categories/index.md","hash":"fce741369677cb3ea2dab477c2f5cdddfc6b0787","modified":1590044007158},{"_id":"themes/Butterfly/source/img/touxiang.png","hash":"1d5dafc834cf3e9cf513e47210d5a53ab65c558b","modified":1590041515820},{"_id":"source/archives/index.md","hash":"191c4369cd66faa04b2cde8018e97f05d4c02792","modified":1590044191961},{"_id":"source/tags/index/biaoqian.jpeg","hash":"7916dc8c12a92bc3820ec03ccb4f81114e57b562","modified":1590043721532},{"_id":"source/archives/index/time.jpg","hash":"9094be4ca6ae5cc904e6f75c48eb94e9a1ebc4af","modified":1590044169686},{"_id":"themes/Butterfly/source/img/bc.jpg","hash":"6ab8614d101561cab366ca0a3b40f2e35859bf15","modified":1590044460550},{"_id":"source/categories/index/fenlei2.jpg","hash":"6006886d3d4bb7300513a3c9624a75fe39b8ed37","modified":1590043936889},{"_id":"source/categories/index/fenlei.jpeg","hash":"a4aa31c99c36045aa4086ad829d02eb4993b6d69","modified":1590043386723},{"_id":"themes/Butterfly/source/img/12.28.mp4","hash":"258d758a59d5159d1d54b7f05ee564ca57bd62f0","modified":1590045679584},{"_id":"source/_posts/vueStandard.md","hash":"f7be691c72e40725bc6575ca6e6f407e7bcd542e","modified":1590053261432},{"_id":"source/_posts/vuePull.md","hash":"f6fdef3fa8e4784cceff146a66c65ebdcb8305c6","modified":1590053286819},{"_id":"source/_posts/vueReasize.md","hash":"1c23ead067adeebbd73687e7cb7a7dd2232eed0a","modified":1590136274235},{"_id":"source/_posts/vuePull/vue.png","hash":"555257b8c5e7ecf34ce4f9b952eeaf006adfa339","modified":1590052776100},{"_id":"themes/Butterfly/source/img/12.28_1.gif","hash":"3b13f584fd628fb08c723bb7c22b82520c5ad48b","modified":1590046484459},{"_id":"source/_posts/vueReasize/test.png","hash":"1e051d7ca154de6d435d72c0a05e613740231012","modified":1590136235390},{"_id":"themes/Butterfly/source/img/wechat.png","hash":"eea2dc70c6eb73d2c948bfaa1aa68ae66c9a012b","modified":1590136637500},{"_id":"themes/Butterfly/source/img/alipay.png","hash":"e2f11f85f517bdbf5f6de00d5e780af53e5cbb7d","modified":1590136610876},{"_id":"public/categories/index.html","hash":"e60537bff1b61eb9c79e80fb2b28734cadaa5857","modified":1590136700905},{"_id":"public/2020/05/21/vueStandard/index.html","hash":"8660a14aa4cf39708c89b83f38de5e40f70c2c42","modified":1590137075975},{"_id":"public/2020/05/21/vuePull/index.html","hash":"dcdee39503d46daa97156536751724bc302b6524","modified":1590137075975},{"_id":"public/tags/index.html","hash":"9c6f1779191d96f6c00e3ce220d3d3d128829a28","modified":1590137075975},{"_id":"public/categories/Vue/index.html","hash":"1bad99256454634832a7b0c3350b9b9ff2ecac70","modified":1590137075975},{"_id":"public/categories/Vue/规范/index.html","hash":"f0345b3c12a1c1d76e6cabb46ba39747b889cc33","modified":1590137075975},{"_id":"public/tags/生活/index.html","hash":"e8d73fe3dfbcfb9c407823f3611b91165f3a15fd","modified":1590137075975},{"_id":"public/categories/生活/index.html","hash":"fc2ea46d2b690d528c62a27f45199861c8bd546c","modified":1590137075975},{"_id":"public/tags/vue/index.html","hash":"e5dba6efa8519a47bdf6b7c63179b50c91717e5f","modified":1590137075975},{"_id":"public/tags/Vue/index.html","hash":"47af5892bd7be3573129ea953a56820b4ee16ff5","modified":1590137075975},{"_id":"public/tags/规范/index.html","hash":"90a4154c0f8201d57a4e8142133d83564c1c35b7","modified":1590137075975},{"_id":"public/2020/05/19/life20200519/index.html","hash":"258baf281670ffd6ef6a190a9eb7119a06613f2a","modified":1590137075975},{"_id":"public/2020/05/21/vueReasize/index.html","hash":"80930bd87898325fc73b91e57e0e115957670b7a","modified":1590137075975},{"_id":"public/categories/Vue/瀑布流/index.html","hash":"224e999dd20f6adae242ddbed04ea20965a64639","modified":1590137075975},{"_id":"public/categories/Vue/Resize/index.html","hash":"afe8df04a28e5e6bafdee14b91990b354a49b04e","modified":1590137075975},{"_id":"public/tags/Vue-Dom/index.html","hash":"dfb4de15ad6baf4a881d4af8b2d3a058d2623318","modified":1590137075975},{"_id":"public/2020/05/21/vueReasize/test.png","hash":"1e051d7ca154de6d435d72c0a05e613740231012","modified":1590136700905},{"_id":"public/img/wechat.png","hash":"eea2dc70c6eb73d2c948bfaa1aa68ae66c9a012b","modified":1590136700905},{"_id":"public/img/alipay.png","hash":"e2f11f85f517bdbf5f6de00d5e780af53e5cbb7d","modified":1590136700905},{"_id":"public/2020/05/19/life20200519/life.jpg","hash":"aedc5a51ff924948f6d1090137a4cb757f94d4ea","modified":1590136700905},{"_id":"themes/Butterfly/source/img/wechat2.png","hash":"eea2dc70c6eb73d2c948bfaa1aa68ae66c9a012b","modified":1590136723146},{"_id":"public/img/wechat2.png","hash":"eea2dc70c6eb73d2c948bfaa1aa68ae66c9a012b","modified":1590136839578},{"_id":"themes/Butterfly/source/img/wechars.png","hash":"89b054de9a5cc45034c69d116517bff9e487b48f","modified":1590137058385},{"_id":"themes/Butterfly/source/img/zhifubao.png","hash":"1baa24e85d30fc8bc9babcb3c2914c6281f33d5f","modified":1590137058356},{"_id":"public/img/wechars.png","hash":"89b054de9a5cc45034c69d116517bff9e487b48f","modified":1590137075975},{"_id":"public/img/zhifubao.png","hash":"1baa24e85d30fc8bc9babcb3c2914c6281f33d5f","modified":1590137075975}],"Category":[{"name":"生活","_id":"ckagczanb0000xgffgi2d9x6o"},{"name":"vue","_id":"ckagh4us70001lgffcrwq6r8t"},{"name":"规范","parent":"ckagh4us70001lgffcrwq6r8t","_id":"ckagh4usf0004lgff0603f0ct"},{"name":"规范 - vue","_id":"ckagk5rwz0009lgff3etvb8c8"},{"name":"规范","_id":"ckagk5t6d000blgff8jg0h18c"},{"name":"vue","parent":"ckagk5t6d000blgff8jg0h18c","_id":"ckagk5t6f000clgffgcmzb2gx"},{"name":"vue 规范","_id":"ckagk7hzp000glgff4je83twu"},{"name":"Vue","_id":"ckagknb4d000qlgff5640daaa"},{"name":"Vue 瀑布流","_id":"ckagknkrx000ulgff7z896gpf"},{"name":"规范","parent":"ckagknb4d000qlgff5640daaa","_id":"ckagknon3000ylgfffo6j19lr"},{"name":"瀑布流","parent":"ckagknb4d000qlgff5640daaa","_id":"ckagko88d0011lgffd32y4b95"},{"name":"Vue Resize","_id":"ckagkoqav0014lgff9739ak0u"},{"name":"Resize","parent":"ckagknb4d000qlgff5640daaa","_id":"ckagkp1rm0016lgff28rn5dnq"}],"Data":[],"Page":[{"title":"标签","date":"2020-05-21T05:54:14.000Z","type":"tags","top_img":"tags/index/biaoqian.jpeg","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2020-05-21 13:54:14\ntype: tags\ntop_img: 'tags/index/biaoqian.jpeg'\n---\n","updated":"2020-05-21T07:45:50.351Z","path":"tags/index.html","_id":"ckagd16ze0004xgff1znz98ai","comments":1,"layout":"page","content":"","site":{"data":{}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","excerpt":"","more":""},{"title":"分类","date":"2020-05-21T05:54:28.000Z","type":"categories","top_img":"categories/index/fenlei2.jpg","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2020-05-21 13:54:28\ntype: categories\ntop_img: 'categories/index/fenlei2.jpg'\n---\n","updated":"2020-05-21T07:50:12.898Z","path":"categories/index.html","_id":"ckagd1hcs0005xgff5hu8bgbk","comments":1,"layout":"page","content":"","site":{"data":{}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","excerpt":"","more":""},{"title":"时光","date":"2020-05-21T06:55:23.000Z","top_img":"archives/index/time.jpg","_content":"","source":"archives/index.md","raw":"---\ntitle: 时光\ndate: 2020-05-21 14:55:23\ntop_img: 'archives/index/time.jpg'\n---\n","updated":"2020-05-21T07:45:58.579Z","path":"archives/index.html","_id":"ckagf7u3x0000a8ff29jjatc4","comments":1,"layout":"page","content":"","site":{"data":{}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","excerpt":"","more":""}],"Post":[{"title":"2020-05-19","date":"2020-05-18T16:00:00.000Z","keywords":"生活","description":null,"top_img":"2020/05/21/life20200519/life.jpg","cover":"2020/05/21/life20200519/life.jpg","_content":"\n# 雨后的济南\n\n![看着天很蓝](life20200519/life.jpg)","source":"_posts/life20200519.md","raw":"---\ntitle: '2020-05-19'\ndate: 2020-05-19\ntags:\n - 生活\ncategories:\n - 生活\nkeywords: 生活\ndescription:\ntop_img: '2020/05/21/life20200519/life.jpg'\ncover: '2020/05/21/life20200519/life.jpg'\n---\n\n# 雨后的济南\n\n![看着天很蓝](life20200519/life.jpg)","slug":"life20200519","published":1,"updated":"2020-05-22T08:28:06.436Z","_id":"ckagcs0q20000h4fffy90ez63","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"雨后的济南\"><a href=\"#雨后的济南\" class=\"headerlink\" title=\"雨后的济南\"></a>雨后的济南</h1><p><img src=\"/2020/05/19/life20200519/life.jpg\" alt=\"看着天很蓝\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"雨后的济南\"><a href=\"#雨后的济南\" class=\"headerlink\" title=\"雨后的济南\"></a>雨后的济南</h1><p><img src=\"/2020/05/19/life20200519/life.jpg\" alt=\"看着天很蓝\"></p>\n"},{"title":"Vue开发规范","date":"2020-05-20T16:00:00.000Z","keywords":null,"description":null,"top_img":null,"cover":"2020/05/21/vuePull/vue.png","_content":"# Vue开发规范参考\n\n\n**本文章参考Vue官方[风格指南](https://cn.vuejs.org/v2/style-guide/)加上自己理解进行总结编写**\n\n> 如果有更好的建议欢迎提出\n\n---\n[toc]\n---\n\n\n\n##   规则归类\n\n### 优先级★★：[必须遵守的](# 必须遵守的)\n\t**这些规则会帮你规避错误，所以学习并接受它们带来的全部代价吧。这里面可能存在例外，但应该非常少，且只有你同时精通 JavaScript 和 Vue 才可以这样做。**\n\n### 优先级★：[强烈推荐](# 强烈推荐)\n\t**这些规则能够在绝大多数工程中改善可读性和开发体验。即使你违反了，代码还是能照常运行，但例外应该尽可能少且有合理的理由。**\n### 优先级：[禁用](# 禁用)\n\t**有些 Vue 特性的存在是为了照顾极端情况或帮助老代码的平稳迁移。当被过度使用时，这些特性会让你的代码难于维护甚至变成 bug 的来源。这些规则是为了给有潜在风险的特性敲个警钟，并说明它们什么时候不应该使用以及为什么。**\n\n## 必须遵守的\n### 组件名为多个单词\n\n**组件名应该始终是多个单词的，根组件 `App` 以及 ``、`` 之类的 Vue 内置组件除外。**\n\n```js\n//bad\nVue.component('todo',{})\nexport default{name:'Todo'}\n//good\nVue.component('todo-item',{})\nexport default{name:'TodoItem'}\n```\n\n### 组建数据\n**组件的<font color='red'> data </font>必须是一个函数（避免污染全局的data）**\n\n```js\n//bad\nVue.component('some-comp', {\n  data: {\n    foo: 'bar'\n  }\n})\n//good\nVue.component('some-comp', {\n  data: function () {\n    return {\n      foo: 'bar'\n    }\n  }\n})\n```\n\n### Prop定义\n\n**在你提交的代码中，prop 的定义应该尽量详细，至少需要指定其类型**\n\n```js\n//bad\nprops: ['status']\n//good\nprops: {\n  status: String\n}\n```\n\n### 为<font color='red'> v-for </font>设置专属的`key`\n\n**在组件上*总是*必须用 `key` 配合 `v-for`，以便维护内部组件及其子树的状态**\n\n```html\n//bad\n<ul>\n  <li v-for=\"todo in todos\">\n    {{ todo.text }}\n  </li>\n</ul>\n//good\n<ul>\n  <li\n    v-for=\"todo in todos\"\n    :key=\"todo.id\"\n  >\n    {{ todo.text }}\n  </li>\n</ul>\n```\n\n### 避免 <font color='red'> `v-for `</font>和  <font color='red'> `v-if `</font> 用在一起\n\n**永远不要把 `v-if` 和 `v-for` 同时用在同一个元素上。`v-for`的优先级要比`v-if`高，放在一起有时候会增加运算量**\n\n一般我们在两种常见的情况下会倾向于这样做：\n\n- 为了过滤一个列表中的项目 (比如 `v-for=\"user in users\" v-if=\"user.isActive\"`)。在这种情形下，请将 `users` 替换为一个计算属性 (比如 `activeUsers`)，让其返回过滤后的列表。\n- 为了避免渲染本应该被隐藏的列表 (比如 `v-for=\"user in users\" v-if=\"shouldShowUsers\"`)。这种情形下，请将 `v-if` 移动至容器元素上 (比如 `ul`、`ol`)。\n\n### 为组件样式设置作用域\n\n**对于应用来说，顶级 `App` 组件和布局组件中的样式可以是全局的，但是其它所有组件都应该是有作用域的**\n\n```css\n/**bad**/\n<style>\n.btn-close {\n  background-color: red;\n}\n</style>\n/**good**/\n<style scoped>\n.button-close {\n  background-color: red;\n}\n</style>\n```\n## 强烈推荐\n\n### 组件的顶级元素的顺序\n\n**单文件组件应该总是让 `<script>` 、`<template>`和 `<style>`标签的顺序保持一致。且 `<style>` 要放在最后，因为另外两个标签至少要有一个。**\n\n```html\n//good\n<script>/* ... */</script>\n<template>...</template>\n<style>/* ... */</style>\n//or\n<template>...</template>\n<script>/* ... */</script>\n<style>/* ... */</style>\n```\n\n\n\n### JS/JSX 中的组件名大小写\n\n**JS/JSX 中的组件名应该始终是 PascalCase 的，尽管在较为简单的应用中只使用 `Vue.component` 进行全局组件注册时，可以使用 kebab-case 字符串**\n\n```js\n//bad\nimport myComponent from './MyComponent.vue'\nVue.component('myComponent', {})\n//good\nimport MyComponent from './MyComponent.vue'\nVue.component('MyComponent', {})\nVue.component('my-component', {})\n```\n\n### 紧密耦合的组件名\n\n**和父组件紧密耦合的子组件应该以父组件名作为前缀命名**\n\n```\n//bad\ncomponents/\n|- TodoList.vue\n|- TodoItem.vue\n|- TodoButton.vue\n//good\ncomponents/\n|- TodoList.vue\n|- TodoListItem.vue\n|- TodoListItemButton.vue\n```\n\n### 组件名中的单词顺序\n\n**组件名应该以高级别的 (通常是一般化描述的) 单词开头，以描述性的修饰词结尾。**\n\n```\n//bad\ncomponents/\n|- ClearSearchButton.vue\n|- ExcludeFromSearchInput.vue\n|- LaunchOnStartupCheckbox.vue\n//good\ncomponents/\n|- SearchButtonClear.vue\n|- SearchInputExcludeGlob.vue\n|- SettingsCheckboxLaunchOnStartup.vue\n```\n### 组件选项顺序\n\n```js\n  - components\n  - props\n  - data\n  - computed\n  - created\n  - mounted\n  - metods\n  - filter\n  - watch\n```\n\n\n\n### 多个`attribute`的元素\n\n**多个 attribute 的元素应该分多行撰写，每个 attribute 一行。**\n\n```html\n//bad\n<MyComponent foo=\"a\" bar=\"b\" baz=\"c\"/>\n//good\n<MyComponent\n  foo=\"a\"\n  bar=\"b\"\n  baz=\"c\"\n/>\n```\n\n### `attribute`的顺序\n\n**原生属性放在前面，指令放在后面**\n\n```js\n  - class\n  - id,ref\n  - name\n  - data-*\n  - src, for, type, href,value,maxlength,max,min,pattern\n  - title, alt，placeholder\n  - required,readonly,disabled\n  - is\n  - v-for\n  - key\n  - v-if\n  - v-else-if\n  - v-else\n  - v-show\n  - v-cloak\n  - v-pre\n  - v-once\n  - v-model\n  - v-bind,:\n  - v-on,@\n  - v-html\n  - v-text\n```\n\n### 模板中简单的表达式\n\n**组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。(活用计算属性)**\n\n```\n//bad\nfullName.split(' ').map(function (word) {\n  return word[0].toUpperCase() + word.slice(1);\n}).join(' ')\n//good\n{{ normalizedFullName }}\ncomputed: {\n  normalizedFullName: function () {\n    return this.fullName.split(' ').map(function (word) {\n      return word[0].toUpperCase() + word.slice(1);\n    }).join(' ')\n  }\n}\n```\n\n### 使用ES6风格编码\n\n- 定义变量使用 let ,定义常量使用 const（涉及到块级作用域）\n\n- 静态字符串一律使用单引号或反引号，动态字符串使用反引号\n\n```js\n  // bad\n  const a = 'foobar'\n  const b = 'foo' + a + 'bar'\n  // good\n  const a = 'foobar'\n  const b = `foo${a}bar`\n  const c = 'foobar'\n```\n\n- 数组或对象成员对变量赋值时，优先使用解构赋值\n\n```js\n\n  // 数组解构赋值\n  const arr = [1, 2, 3, 4]\n  // bad\n  const first = arr[0]\n  const second = arr[1]\n \n  // good\n  const [first, second] = arr\n```\n\n\n\n\n### 指令缩写\n\n**指令缩写 (用 `:` 表示 `v-bind:`、用 `@` 表示 `v-on:` 和用 `#` 表示 `v-slot:`) 应该要么都用要么都不用。**\n\n### `methods`方法命名规范\n\n- **驼峰式命名，统一使用动词或者动词+名词形式**\n\n```js\n//bad\ngo、nextPage、show、open、login \n// good\njumpPage、openCarInfoDialog\n```\n\n- **请求数据的方法，以data结尾**\n\n```js\n//bad\ntakeData、confirmData、getList、postForm\n// good\ngetListData、postFormData\n```\n## 禁用\n### scoped中的元素选择器\n\n**元素选择器应该避免在 `scoped` 中出现**\n\n```html\n//bad\n<template>\n  <button>X</button>\n</template>\n\n<style scoped>\nbutton {\n  background-color: red;\n}\n</style>\n//good\n<template>\n  <button class=\"btn btn-close\">X</button>\n</template>\n\n<style scoped>\n.btn-close {\n  background-color: red;\n}\n</style>\n```\n\n### 隐性的父子组件通信\n\n**应该优先通过 prop 和`this.$emit`进行父子组件之间的通信，而不是 `this.$parent` 或变更 prop**\n\n```html\n//bad\nVue.component('TodoItem', {\n  props: {\n    todo: {\n      type: Object,\n      required: true\n    }\n  },\n  template: '<input v-model=\"todo.text\">'\n})\nVue.component('TodoItem', {\n  props: {\n    todo: {\n      type: Object,\n      required: true\n    }\n  },\n  methods: {\n    removeTodo () {\n      var vm = this\n      vm.$parent.todos = vm.$parent.todos.filter(function (todo) {\n        return todo.id !== vm.todo.id\n      })\n    }\n  },\n  template: `\n    <span>\n      {{ todo.text }}\n      <button @click=\"removeTodo\">\n        X\n      </button>\n    </span>\n  `\n})\n```\n\n```html\n//good\nVue.component('TodoItem', {\n  props: {\n    todo: {\n      type: Object,\n      required: true\n    }\n  },\n  template: `\n    <input\n      :value=\"todo.text\"\n      @input=\"$emit('input', $event.target.value)\"\n    >\n  `\n})\nVue.component('TodoItem', {\n  props: {\n    todo: {\n      type: Object,\n      required: true\n    }\n  },\n  template: `\n    <span>\n      {{ todo.text }}\n      <button @click=\"$emit('delete')\">\n        X\n      </button>\n    </span>\n  `\n})\n```\n\n\n","source":"_posts/vueStandard.md","raw":"---\ntitle: Vue开发规范\ndate: 2020-05-21\ntags: \n - vue\n - 规范\ncategories: [Vue,规范]\nkeywords:\ndescription:\ntop_img:\ncover: '2020/05/21/vuePull/vue.png'\n---\n# Vue开发规范参考\n\n\n**本文章参考Vue官方[风格指南](https://cn.vuejs.org/v2/style-guide/)加上自己理解进行总结编写**\n\n> 如果有更好的建议欢迎提出\n\n---\n[toc]\n---\n\n\n\n##   规则归类\n\n### 优先级★★：[必须遵守的](# 必须遵守的)\n\t**这些规则会帮你规避错误，所以学习并接受它们带来的全部代价吧。这里面可能存在例外，但应该非常少，且只有你同时精通 JavaScript 和 Vue 才可以这样做。**\n\n### 优先级★：[强烈推荐](# 强烈推荐)\n\t**这些规则能够在绝大多数工程中改善可读性和开发体验。即使你违反了，代码还是能照常运行，但例外应该尽可能少且有合理的理由。**\n### 优先级：[禁用](# 禁用)\n\t**有些 Vue 特性的存在是为了照顾极端情况或帮助老代码的平稳迁移。当被过度使用时，这些特性会让你的代码难于维护甚至变成 bug 的来源。这些规则是为了给有潜在风险的特性敲个警钟，并说明它们什么时候不应该使用以及为什么。**\n\n## 必须遵守的\n### 组件名为多个单词\n\n**组件名应该始终是多个单词的，根组件 `App` 以及 ``、`` 之类的 Vue 内置组件除外。**\n\n```js\n//bad\nVue.component('todo',{})\nexport default{name:'Todo'}\n//good\nVue.component('todo-item',{})\nexport default{name:'TodoItem'}\n```\n\n### 组建数据\n**组件的<font color='red'> data </font>必须是一个函数（避免污染全局的data）**\n\n```js\n//bad\nVue.component('some-comp', {\n  data: {\n    foo: 'bar'\n  }\n})\n//good\nVue.component('some-comp', {\n  data: function () {\n    return {\n      foo: 'bar'\n    }\n  }\n})\n```\n\n### Prop定义\n\n**在你提交的代码中，prop 的定义应该尽量详细，至少需要指定其类型**\n\n```js\n//bad\nprops: ['status']\n//good\nprops: {\n  status: String\n}\n```\n\n### 为<font color='red'> v-for </font>设置专属的`key`\n\n**在组件上*总是*必须用 `key` 配合 `v-for`，以便维护内部组件及其子树的状态**\n\n```html\n//bad\n<ul>\n  <li v-for=\"todo in todos\">\n    {{ todo.text }}\n  </li>\n</ul>\n//good\n<ul>\n  <li\n    v-for=\"todo in todos\"\n    :key=\"todo.id\"\n  >\n    {{ todo.text }}\n  </li>\n</ul>\n```\n\n### 避免 <font color='red'> `v-for `</font>和  <font color='red'> `v-if `</font> 用在一起\n\n**永远不要把 `v-if` 和 `v-for` 同时用在同一个元素上。`v-for`的优先级要比`v-if`高，放在一起有时候会增加运算量**\n\n一般我们在两种常见的情况下会倾向于这样做：\n\n- 为了过滤一个列表中的项目 (比如 `v-for=\"user in users\" v-if=\"user.isActive\"`)。在这种情形下，请将 `users` 替换为一个计算属性 (比如 `activeUsers`)，让其返回过滤后的列表。\n- 为了避免渲染本应该被隐藏的列表 (比如 `v-for=\"user in users\" v-if=\"shouldShowUsers\"`)。这种情形下，请将 `v-if` 移动至容器元素上 (比如 `ul`、`ol`)。\n\n### 为组件样式设置作用域\n\n**对于应用来说，顶级 `App` 组件和布局组件中的样式可以是全局的，但是其它所有组件都应该是有作用域的**\n\n```css\n/**bad**/\n<style>\n.btn-close {\n  background-color: red;\n}\n</style>\n/**good**/\n<style scoped>\n.button-close {\n  background-color: red;\n}\n</style>\n```\n## 强烈推荐\n\n### 组件的顶级元素的顺序\n\n**单文件组件应该总是让 `<script>` 、`<template>`和 `<style>`标签的顺序保持一致。且 `<style>` 要放在最后，因为另外两个标签至少要有一个。**\n\n```html\n//good\n<script>/* ... */</script>\n<template>...</template>\n<style>/* ... */</style>\n//or\n<template>...</template>\n<script>/* ... */</script>\n<style>/* ... */</style>\n```\n\n\n\n### JS/JSX 中的组件名大小写\n\n**JS/JSX 中的组件名应该始终是 PascalCase 的，尽管在较为简单的应用中只使用 `Vue.component` 进行全局组件注册时，可以使用 kebab-case 字符串**\n\n```js\n//bad\nimport myComponent from './MyComponent.vue'\nVue.component('myComponent', {})\n//good\nimport MyComponent from './MyComponent.vue'\nVue.component('MyComponent', {})\nVue.component('my-component', {})\n```\n\n### 紧密耦合的组件名\n\n**和父组件紧密耦合的子组件应该以父组件名作为前缀命名**\n\n```\n//bad\ncomponents/\n|- TodoList.vue\n|- TodoItem.vue\n|- TodoButton.vue\n//good\ncomponents/\n|- TodoList.vue\n|- TodoListItem.vue\n|- TodoListItemButton.vue\n```\n\n### 组件名中的单词顺序\n\n**组件名应该以高级别的 (通常是一般化描述的) 单词开头，以描述性的修饰词结尾。**\n\n```\n//bad\ncomponents/\n|- ClearSearchButton.vue\n|- ExcludeFromSearchInput.vue\n|- LaunchOnStartupCheckbox.vue\n//good\ncomponents/\n|- SearchButtonClear.vue\n|- SearchInputExcludeGlob.vue\n|- SettingsCheckboxLaunchOnStartup.vue\n```\n### 组件选项顺序\n\n```js\n  - components\n  - props\n  - data\n  - computed\n  - created\n  - mounted\n  - metods\n  - filter\n  - watch\n```\n\n\n\n### 多个`attribute`的元素\n\n**多个 attribute 的元素应该分多行撰写，每个 attribute 一行。**\n\n```html\n//bad\n<MyComponent foo=\"a\" bar=\"b\" baz=\"c\"/>\n//good\n<MyComponent\n  foo=\"a\"\n  bar=\"b\"\n  baz=\"c\"\n/>\n```\n\n### `attribute`的顺序\n\n**原生属性放在前面，指令放在后面**\n\n```js\n  - class\n  - id,ref\n  - name\n  - data-*\n  - src, for, type, href,value,maxlength,max,min,pattern\n  - title, alt，placeholder\n  - required,readonly,disabled\n  - is\n  - v-for\n  - key\n  - v-if\n  - v-else-if\n  - v-else\n  - v-show\n  - v-cloak\n  - v-pre\n  - v-once\n  - v-model\n  - v-bind,:\n  - v-on,@\n  - v-html\n  - v-text\n```\n\n### 模板中简单的表达式\n\n**组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。(活用计算属性)**\n\n```\n//bad\nfullName.split(' ').map(function (word) {\n  return word[0].toUpperCase() + word.slice(1);\n}).join(' ')\n//good\n{{ normalizedFullName }}\ncomputed: {\n  normalizedFullName: function () {\n    return this.fullName.split(' ').map(function (word) {\n      return word[0].toUpperCase() + word.slice(1);\n    }).join(' ')\n  }\n}\n```\n\n### 使用ES6风格编码\n\n- 定义变量使用 let ,定义常量使用 const（涉及到块级作用域）\n\n- 静态字符串一律使用单引号或反引号，动态字符串使用反引号\n\n```js\n  // bad\n  const a = 'foobar'\n  const b = 'foo' + a + 'bar'\n  // good\n  const a = 'foobar'\n  const b = `foo${a}bar`\n  const c = 'foobar'\n```\n\n- 数组或对象成员对变量赋值时，优先使用解构赋值\n\n```js\n\n  // 数组解构赋值\n  const arr = [1, 2, 3, 4]\n  // bad\n  const first = arr[0]\n  const second = arr[1]\n \n  // good\n  const [first, second] = arr\n```\n\n\n\n\n### 指令缩写\n\n**指令缩写 (用 `:` 表示 `v-bind:`、用 `@` 表示 `v-on:` 和用 `#` 表示 `v-slot:`) 应该要么都用要么都不用。**\n\n### `methods`方法命名规范\n\n- **驼峰式命名，统一使用动词或者动词+名词形式**\n\n```js\n//bad\ngo、nextPage、show、open、login \n// good\njumpPage、openCarInfoDialog\n```\n\n- **请求数据的方法，以data结尾**\n\n```js\n//bad\ntakeData、confirmData、getList、postForm\n// good\ngetListData、postFormData\n```\n## 禁用\n### scoped中的元素选择器\n\n**元素选择器应该避免在 `scoped` 中出现**\n\n```html\n//bad\n<template>\n  <button>X</button>\n</template>\n\n<style scoped>\nbutton {\n  background-color: red;\n}\n</style>\n//good\n<template>\n  <button class=\"btn btn-close\">X</button>\n</template>\n\n<style scoped>\n.btn-close {\n  background-color: red;\n}\n</style>\n```\n\n### 隐性的父子组件通信\n\n**应该优先通过 prop 和`this.$emit`进行父子组件之间的通信，而不是 `this.$parent` 或变更 prop**\n\n```html\n//bad\nVue.component('TodoItem', {\n  props: {\n    todo: {\n      type: Object,\n      required: true\n    }\n  },\n  template: '<input v-model=\"todo.text\">'\n})\nVue.component('TodoItem', {\n  props: {\n    todo: {\n      type: Object,\n      required: true\n    }\n  },\n  methods: {\n    removeTodo () {\n      var vm = this\n      vm.$parent.todos = vm.$parent.todos.filter(function (todo) {\n        return todo.id !== vm.todo.id\n      })\n    }\n  },\n  template: `\n    <span>\n      {{ todo.text }}\n      <button @click=\"removeTodo\">\n        X\n      </button>\n    </span>\n  `\n})\n```\n\n```html\n//good\nVue.component('TodoItem', {\n  props: {\n    todo: {\n      type: Object,\n      required: true\n    }\n  },\n  template: `\n    <input\n      :value=\"todo.text\"\n      @input=\"$emit('input', $event.target.value)\"\n    >\n  `\n})\nVue.component('TodoItem', {\n  props: {\n    todo: {\n      type: Object,\n      required: true\n    }\n  },\n  template: `\n    <span>\n      {{ todo.text }}\n      <button @click=\"$emit('delete')\">\n        X\n      </button>\n    </span>\n  `\n})\n```\n\n\n","slug":"vueStandard","published":1,"updated":"2020-05-21T09:27:41.432Z","_id":"ckagh1vmz0000lgffftyxa9nc","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Vue开发规范参考\"><a href=\"#Vue开发规范参考\" class=\"headerlink\" title=\"Vue开发规范参考\"></a>Vue开发规范参考</h1><p><strong>本文章参考Vue官方<a href=\"https://cn.vuejs.org/v2/style-guide/\" target=\"_blank\" rel=\"noopener\">风格指南</a>加上自己理解进行总结编写</strong></p>\n<blockquote>\n<p>如果有更好的建议欢迎提出</p>\n</blockquote>\n<hr>\n<h2 id=\"toc\"><a href=\"#toc\" class=\"headerlink\" title=\"[toc]\"></a>[toc]</h2><h2 id=\"规则归类\"><a href=\"#规则归类\" class=\"headerlink\" title=\"规则归类\"></a>规则归类</h2><h3 id=\"优先级★★：-必须遵守的-必须遵守的\"><a href=\"#优先级★★：-必须遵守的-必须遵守的\" class=\"headerlink\" title=\"优先级★★：[必须遵守的](# 必须遵守的)\"></a>优先级★★：[必须遵守的](# 必须遵守的)</h3><pre><code>**这些规则会帮你规避错误，所以学习并接受它们带来的全部代价吧。这里面可能存在例外，但应该非常少，且只有你同时精通 JavaScript 和 Vue 才可以这样做。**</code></pre><h3 id=\"优先级★：-强烈推荐-强烈推荐\"><a href=\"#优先级★：-强烈推荐-强烈推荐\" class=\"headerlink\" title=\"优先级★：[强烈推荐](# 强烈推荐)\"></a>优先级★：[强烈推荐](# 强烈推荐)</h3><pre><code>**这些规则能够在绝大多数工程中改善可读性和开发体验。即使你违反了，代码还是能照常运行，但例外应该尽可能少且有合理的理由。**</code></pre><h3 id=\"优先级：-禁用-禁用\"><a href=\"#优先级：-禁用-禁用\" class=\"headerlink\" title=\"优先级：[禁用](# 禁用)\"></a>优先级：[禁用](# 禁用)</h3><pre><code>**有些 Vue 特性的存在是为了照顾极端情况或帮助老代码的平稳迁移。当被过度使用时，这些特性会让你的代码难于维护甚至变成 bug 的来源。这些规则是为了给有潜在风险的特性敲个警钟，并说明它们什么时候不应该使用以及为什么。**</code></pre><h2 id=\"必须遵守的\"><a href=\"#必须遵守的\" class=\"headerlink\" title=\"必须遵守的\"></a>必须遵守的</h2><h3 id=\"组件名为多个单词\"><a href=\"#组件名为多个单词\" class=\"headerlink\" title=\"组件名为多个单词\"></a>组件名为多个单词</h3><p><strong>组件名应该始终是多个单词的，根组件 <code>App</code> 以及 <code>、</code> 之类的 Vue 内置组件除外。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">'todo'</span>,&#123;&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;<span class=\"attr\">name</span>:<span class=\"string\">'Todo'</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">//good</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">'todo-item'</span>,&#123;&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;<span class=\"attr\">name</span>:<span class=\"string\">'TodoItem'</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"组建数据\"><a href=\"#组建数据\" class=\"headerlink\" title=\"组建数据\"></a>组建数据</h3><p><strong>组件的<font color=\"red\"> data </font>必须是一个函数（避免污染全局的data）</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">'some-comp'</span>, &#123;</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    foo: <span class=\"string\">'bar'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//good</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">'some-comp'</span>, &#123;</span><br><span class=\"line\">  data: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      foo: <span class=\"string\">'bar'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Prop定义\"><a href=\"#Prop定义\" class=\"headerlink\" title=\"Prop定义\"></a>Prop定义</h3><p><strong>在你提交的代码中，prop 的定义应该尽量详细，至少需要指定其类型</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\">props: [<span class=\"string\">'status'</span>]</span><br><span class=\"line\"><span class=\"comment\">//good</span></span><br><span class=\"line\">props: &#123;</span><br><span class=\"line\">  status: <span class=\"built_in\">String</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"为-v-for-设置专属的key\"><a href=\"#为-v-for-设置专属的key\" class=\"headerlink\" title=\"为 v-for 设置专属的key\"></a>为<font color=\"red\"> v-for </font>设置专属的<code>key</code></h3><p><strong>在组件上<em>总是</em>必须用 <code>key</code> 配合 <code>v-for</code>，以便维护内部组件及其子树的状态</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//bad</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"todo in todos\"</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; todo.text &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">//good</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-for</span>=<span class=\"string\">\"todo in todos\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:key</span>=<span class=\"string\">\"todo.id\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">    &#123;&#123; todo.text &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"避免-v-for和-v-if-用在一起\"><a href=\"#避免-v-for和-v-if-用在一起\" class=\"headerlink\" title=\"避免  v-for和   v-if 用在一起\"></a>避免 <font color=\"red\"> <code>v-for</code></font>和  <font color=\"red\"> <code>v-if</code></font> 用在一起</h3><p><strong>永远不要把 <code>v-if</code> 和 <code>v-for</code> 同时用在同一个元素上。<code>v-for</code>的优先级要比<code>v-if</code>高，放在一起有时候会增加运算量</strong></p>\n<p>一般我们在两种常见的情况下会倾向于这样做：</p>\n<ul>\n<li>为了过滤一个列表中的项目 (比如 <code>v-for=&quot;user in users&quot; v-if=&quot;user.isActive&quot;</code>)。在这种情形下，请将 <code>users</code> 替换为一个计算属性 (比如 <code>activeUsers</code>)，让其返回过滤后的列表。</li>\n<li>为了避免渲染本应该被隐藏的列表 (比如 <code>v-for=&quot;user in users&quot; v-if=&quot;shouldShowUsers&quot;</code>)。这种情形下，请将 <code>v-if</code> 移动至容器元素上 (比如 <code>ul</code>、<code>ol</code>)。</li>\n</ul>\n<h3 id=\"为组件样式设置作用域\"><a href=\"#为组件样式设置作用域\" class=\"headerlink\" title=\"为组件样式设置作用域\"></a>为组件样式设置作用域</h3><p><strong>对于应用来说，顶级 <code>App</code> 组件和布局组件中的样式可以是全局的，但是其它所有组件都应该是有作用域的</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**bad**/</span></span><br><span class=\"line\">&lt;<span class=\"selector-tag\">style</span>&gt;</span><br><span class=\"line\"><span class=\"selector-class\">.btn-close</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"><span class=\"comment\">/**good**/</span></span><br><span class=\"line\">&lt;<span class=\"selector-tag\">style</span> <span class=\"selector-tag\">scoped</span>&gt;</span><br><span class=\"line\"><span class=\"selector-class\">.button-close</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"强烈推荐\"><a href=\"#强烈推荐\" class=\"headerlink\" title=\"强烈推荐\"></a>强烈推荐</h2><h3 id=\"组件的顶级元素的顺序\"><a href=\"#组件的顶级元素的顺序\" class=\"headerlink\" title=\"组件的顶级元素的顺序\"></a>组件的顶级元素的顺序</h3><p><strong>单文件组件应该总是让 <code>&lt;script&gt;</code> 、<code>&lt;template&gt;</code>和 <code>&lt;style&gt;</code>标签的顺序保持一致。且 <code>&lt;style&gt;</code> 要放在最后，因为另外两个标签至少要有一个。</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//good</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\"><span class=\"comment\">/* ... */</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"><span class=\"comment\">/* ... */</span></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">//or</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\"><span class=\"comment\">/* ... */</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"><span class=\"comment\">/* ... */</span></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"JS-JSX-中的组件名大小写\"><a href=\"#JS-JSX-中的组件名大小写\" class=\"headerlink\" title=\"JS/JSX 中的组件名大小写\"></a>JS/JSX 中的组件名大小写</h3><p><strong>JS/JSX 中的组件名应该始终是 PascalCase 的，尽管在较为简单的应用中只使用 <code>Vue.component</code> 进行全局组件注册时，可以使用 kebab-case 字符串</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> myComponent <span class=\"keyword\">from</span> <span class=\"string\">'./MyComponent.vue'</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">'myComponent'</span>, &#123;&#125;)</span><br><span class=\"line\"><span class=\"comment\">//good</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> MyComponent <span class=\"keyword\">from</span> <span class=\"string\">'./MyComponent.vue'</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">'MyComponent'</span>, &#123;&#125;)</span><br><span class=\"line\">Vue.component(<span class=\"string\">'my-component'</span>, &#123;&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"紧密耦合的组件名\"><a href=\"#紧密耦合的组件名\" class=\"headerlink\" title=\"紧密耦合的组件名\"></a>紧密耦合的组件名</h3><p><strong>和父组件紧密耦合的子组件应该以父组件名作为前缀命名</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;bad</span><br><span class=\"line\">components&#x2F;</span><br><span class=\"line\">|- TodoList.vue</span><br><span class=\"line\">|- TodoItem.vue</span><br><span class=\"line\">|- TodoButton.vue</span><br><span class=\"line\">&#x2F;&#x2F;good</span><br><span class=\"line\">components&#x2F;</span><br><span class=\"line\">|- TodoList.vue</span><br><span class=\"line\">|- TodoListItem.vue</span><br><span class=\"line\">|- TodoListItemButton.vue</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"组件名中的单词顺序\"><a href=\"#组件名中的单词顺序\" class=\"headerlink\" title=\"组件名中的单词顺序\"></a>组件名中的单词顺序</h3><p><strong>组件名应该以高级别的 (通常是一般化描述的) 单词开头，以描述性的修饰词结尾。</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;bad</span><br><span class=\"line\">components&#x2F;</span><br><span class=\"line\">|- ClearSearchButton.vue</span><br><span class=\"line\">|- ExcludeFromSearchInput.vue</span><br><span class=\"line\">|- LaunchOnStartupCheckbox.vue</span><br><span class=\"line\">&#x2F;&#x2F;good</span><br><span class=\"line\">components&#x2F;</span><br><span class=\"line\">|- SearchButtonClear.vue</span><br><span class=\"line\">|- SearchInputExcludeGlob.vue</span><br><span class=\"line\">|- SettingsCheckboxLaunchOnStartup.vue</span><br></pre></td></tr></table></figure>\n<h3 id=\"组件选项顺序\"><a href=\"#组件选项顺序\" class=\"headerlink\" title=\"组件选项顺序\"></a>组件选项顺序</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- components</span><br><span class=\"line\">- props</span><br><span class=\"line\">- data</span><br><span class=\"line\">- computed</span><br><span class=\"line\">- created</span><br><span class=\"line\">- mounted</span><br><span class=\"line\">- metods</span><br><span class=\"line\">- filter</span><br><span class=\"line\">- watch</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"多个attribute的元素\"><a href=\"#多个attribute的元素\" class=\"headerlink\" title=\"多个attribute的元素\"></a>多个<code>attribute</code>的元素</h3><p><strong>多个 attribute 的元素应该分多行撰写，每个 attribute 一行。</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//bad</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span> <span class=\"attr\">foo</span>=<span class=\"string\">\"a\"</span> <span class=\"attr\">bar</span>=<span class=\"string\">\"b\"</span> <span class=\"attr\">baz</span>=<span class=\"string\">\"c\"</span>/&gt;</span></span><br><span class=\"line\">//good</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">foo</span>=<span class=\"string\">\"a\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">bar</span>=<span class=\"string\">\"b\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">baz</span>=<span class=\"string\">\"c\"</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"attribute的顺序\"><a href=\"#attribute的顺序\" class=\"headerlink\" title=\"attribute的顺序\"></a><code>attribute</code>的顺序</h3><p><strong>原生属性放在前面，指令放在后面</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- <span class=\"class\"><span class=\"keyword\">class</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">id</span>,<span class=\"title\">ref</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">name</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">data</span>-*</span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">src</span>, <span class=\"title\">for</span>, <span class=\"title\">type</span>, <span class=\"title\">href</span>,<span class=\"title\">value</span>,<span class=\"title\">maxlength</span>,<span class=\"title\">max</span>,<span class=\"title\">min</span>,<span class=\"title\">pattern</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">title</span>, <span class=\"title\">alt</span>，<span class=\"title\">placeholder</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">required</span>,<span class=\"title\">readonly</span>,<span class=\"title\">disabled</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">is</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">for</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">key</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">if</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">else</span>-<span class=\"title\">if</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">else</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">show</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">cloak</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">pre</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">once</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">model</span></span></span><br><span class=\"line\">- v-bind,:</span><br><span class=\"line\">- v-on,@</span><br><span class=\"line\">- v-html</span><br><span class=\"line\">- v-text</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"模板中简单的表达式\"><a href=\"#模板中简单的表达式\" class=\"headerlink\" title=\"模板中简单的表达式\"></a>模板中简单的表达式</h3><p><strong>组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。(活用计算属性)</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;bad</span><br><span class=\"line\">fullName.split(&#39; &#39;).map(function (word) &#123;</span><br><span class=\"line\">  return word[0].toUpperCase() + word.slice(1);</span><br><span class=\"line\">&#125;).join(&#39; &#39;)</span><br><span class=\"line\">&#x2F;&#x2F;good</span><br><span class=\"line\">&#123;&#123; normalizedFullName &#125;&#125;</span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  normalizedFullName: function () &#123;</span><br><span class=\"line\">    return this.fullName.split(&#39; &#39;).map(function (word) &#123;</span><br><span class=\"line\">      return word[0].toUpperCase() + word.slice(1);</span><br><span class=\"line\">    &#125;).join(&#39; &#39;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用ES6风格编码\"><a href=\"#使用ES6风格编码\" class=\"headerlink\" title=\"使用ES6风格编码\"></a>使用ES6风格编码</h3><ul>\n<li><p>定义变量使用 let ,定义常量使用 const（涉及到块级作用域）</p>\n</li>\n<li><p>静态字符串一律使用单引号或反引号，动态字符串使用反引号</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"string\">'foobar'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> b = <span class=\"string\">'foo'</span> + a + <span class=\"string\">'bar'</span></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"string\">'foobar'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> b = <span class=\"string\">`foo<span class=\"subst\">$&#123;a&#125;</span>bar`</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> c = <span class=\"string\">'foobar'</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>数组或对象成员对变量赋值时，优先使用解构赋值</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数组解构赋值</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> first = arr[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"keyword\">const</span> second = arr[<span class=\"number\">1</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> [first, second] = arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h3 id=\"指令缩写\"><a href=\"#指令缩写\" class=\"headerlink\" title=\"指令缩写\"></a>指令缩写</h3><p><strong>指令缩写 (用 <code>:</code> 表示 <code>v-bind:</code>、用 <code>@</code> 表示 <code>v-on:</code> 和用 <code>#</code> 表示 <code>v-slot:</code>) 应该要么都用要么都不用。</strong></p>\n<h3 id=\"methods方法命名规范\"><a href=\"#methods方法命名规范\" class=\"headerlink\" title=\"methods方法命名规范\"></a><code>methods</code>方法命名规范</h3><ul>\n<li><strong>驼峰式命名，统一使用动词或者动词+名词形式</strong></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\">go、nextPage、show、open、login </span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\">jumpPage、openCarInfoDialog</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>请求数据的方法，以data结尾</strong></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\">takeData、confirmData、getList、postForm</span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\">getListData、postFormData</span><br></pre></td></tr></table></figure>\n<h2 id=\"禁用\"><a href=\"#禁用\" class=\"headerlink\" title=\"禁用\"></a>禁用</h2><h3 id=\"scoped中的元素选择器\"><a href=\"#scoped中的元素选择器\" class=\"headerlink\" title=\"scoped中的元素选择器\"></a>scoped中的元素选择器</h3><p><strong>元素选择器应该避免在 <code>scoped</code> 中出现</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//bad</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>X<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span></span><br><span class=\"line\">button &#123;</span><br><span class=\"line\">  background-color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">//good</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-close\"</span>&gt;</span>X<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.btn-close</span> &#123;</span></span><br><span class=\"line\">  background-color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"隐性的父子组件通信\"><a href=\"#隐性的父子组件通信\" class=\"headerlink\" title=\"隐性的父子组件通信\"></a>隐性的父子组件通信</h3><p><strong>应该优先通过 prop 和<code>this.$emit</code>进行父子组件之间的通信，而不是 <code>this.$parent</code> 或变更 prop</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//bad</span><br><span class=\"line\">Vue.component('TodoItem', &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    todo: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      required: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: '<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"todo.text\"</span>&gt;</span>'</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">Vue.component('TodoItem', &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    todo: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      required: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    removeTodo () &#123;</span><br><span class=\"line\">      var vm = this</span><br><span class=\"line\">      vm.$parent.todos = vm.$parent.todos.filter(function (todo) &#123;</span><br><span class=\"line\">        return todo.id !== vm.todo.id</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: `</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      &#123;&#123; todo.text &#125;&#125;</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"removeTodo\"</span>&gt;</span></span><br><span class=\"line\">        X</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  `</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//good</span><br><span class=\"line\">Vue.component('TodoItem', &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    todo: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      required: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: `</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:value</span>=<span class=\"string\">\"todo.text\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      @<span class=\"attr\">input</span>=<span class=\"string\">\"$emit('input', $event.target.value)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">  `</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">Vue.component('TodoItem', &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    todo: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      required: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: `</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      &#123;&#123; todo.text &#125;&#125;</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"$emit('delete')\"</span>&gt;</span></span><br><span class=\"line\">        X</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  `</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Vue开发规范参考\"><a href=\"#Vue开发规范参考\" class=\"headerlink\" title=\"Vue开发规范参考\"></a>Vue开发规范参考</h1><p><strong>本文章参考Vue官方<a href=\"https://cn.vuejs.org/v2/style-guide/\" target=\"_blank\" rel=\"noopener\">风格指南</a>加上自己理解进行总结编写</strong></p>\n<blockquote>\n<p>如果有更好的建议欢迎提出</p>\n</blockquote>\n<hr>\n<h2 id=\"toc\"><a href=\"#toc\" class=\"headerlink\" title=\"[toc]\"></a>[toc]</h2><h2 id=\"规则归类\"><a href=\"#规则归类\" class=\"headerlink\" title=\"规则归类\"></a>规则归类</h2><h3 id=\"优先级★★：-必须遵守的-必须遵守的\"><a href=\"#优先级★★：-必须遵守的-必须遵守的\" class=\"headerlink\" title=\"优先级★★：[必须遵守的](# 必须遵守的)\"></a>优先级★★：[必须遵守的](# 必须遵守的)</h3><pre><code>**这些规则会帮你规避错误，所以学习并接受它们带来的全部代价吧。这里面可能存在例外，但应该非常少，且只有你同时精通 JavaScript 和 Vue 才可以这样做。**</code></pre><h3 id=\"优先级★：-强烈推荐-强烈推荐\"><a href=\"#优先级★：-强烈推荐-强烈推荐\" class=\"headerlink\" title=\"优先级★：[强烈推荐](# 强烈推荐)\"></a>优先级★：[强烈推荐](# 强烈推荐)</h3><pre><code>**这些规则能够在绝大多数工程中改善可读性和开发体验。即使你违反了，代码还是能照常运行，但例外应该尽可能少且有合理的理由。**</code></pre><h3 id=\"优先级：-禁用-禁用\"><a href=\"#优先级：-禁用-禁用\" class=\"headerlink\" title=\"优先级：[禁用](# 禁用)\"></a>优先级：[禁用](# 禁用)</h3><pre><code>**有些 Vue 特性的存在是为了照顾极端情况或帮助老代码的平稳迁移。当被过度使用时，这些特性会让你的代码难于维护甚至变成 bug 的来源。这些规则是为了给有潜在风险的特性敲个警钟，并说明它们什么时候不应该使用以及为什么。**</code></pre><h2 id=\"必须遵守的\"><a href=\"#必须遵守的\" class=\"headerlink\" title=\"必须遵守的\"></a>必须遵守的</h2><h3 id=\"组件名为多个单词\"><a href=\"#组件名为多个单词\" class=\"headerlink\" title=\"组件名为多个单词\"></a>组件名为多个单词</h3><p><strong>组件名应该始终是多个单词的，根组件 <code>App</code> 以及 <code>、</code> 之类的 Vue 内置组件除外。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">'todo'</span>,&#123;&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;<span class=\"attr\">name</span>:<span class=\"string\">'Todo'</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">//good</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">'todo-item'</span>,&#123;&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;<span class=\"attr\">name</span>:<span class=\"string\">'TodoItem'</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"组建数据\"><a href=\"#组建数据\" class=\"headerlink\" title=\"组建数据\"></a>组建数据</h3><p><strong>组件的<font color=\"red\"> data </font>必须是一个函数（避免污染全局的data）</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">'some-comp'</span>, &#123;</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    foo: <span class=\"string\">'bar'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//good</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">'some-comp'</span>, &#123;</span><br><span class=\"line\">  data: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      foo: <span class=\"string\">'bar'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Prop定义\"><a href=\"#Prop定义\" class=\"headerlink\" title=\"Prop定义\"></a>Prop定义</h3><p><strong>在你提交的代码中，prop 的定义应该尽量详细，至少需要指定其类型</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\">props: [<span class=\"string\">'status'</span>]</span><br><span class=\"line\"><span class=\"comment\">//good</span></span><br><span class=\"line\">props: &#123;</span><br><span class=\"line\">  status: <span class=\"built_in\">String</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"为-v-for-设置专属的key\"><a href=\"#为-v-for-设置专属的key\" class=\"headerlink\" title=\"为 v-for 设置专属的key\"></a>为<font color=\"red\"> v-for </font>设置专属的<code>key</code></h3><p><strong>在组件上<em>总是</em>必须用 <code>key</code> 配合 <code>v-for</code>，以便维护内部组件及其子树的状态</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//bad</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"todo in todos\"</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; todo.text &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">//good</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-for</span>=<span class=\"string\">\"todo in todos\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:key</span>=<span class=\"string\">\"todo.id\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">    &#123;&#123; todo.text &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"避免-v-for和-v-if-用在一起\"><a href=\"#避免-v-for和-v-if-用在一起\" class=\"headerlink\" title=\"避免  v-for和   v-if 用在一起\"></a>避免 <font color=\"red\"> <code>v-for</code></font>和  <font color=\"red\"> <code>v-if</code></font> 用在一起</h3><p><strong>永远不要把 <code>v-if</code> 和 <code>v-for</code> 同时用在同一个元素上。<code>v-for</code>的优先级要比<code>v-if</code>高，放在一起有时候会增加运算量</strong></p>\n<p>一般我们在两种常见的情况下会倾向于这样做：</p>\n<ul>\n<li>为了过滤一个列表中的项目 (比如 <code>v-for=&quot;user in users&quot; v-if=&quot;user.isActive&quot;</code>)。在这种情形下，请将 <code>users</code> 替换为一个计算属性 (比如 <code>activeUsers</code>)，让其返回过滤后的列表。</li>\n<li>为了避免渲染本应该被隐藏的列表 (比如 <code>v-for=&quot;user in users&quot; v-if=&quot;shouldShowUsers&quot;</code>)。这种情形下，请将 <code>v-if</code> 移动至容器元素上 (比如 <code>ul</code>、<code>ol</code>)。</li>\n</ul>\n<h3 id=\"为组件样式设置作用域\"><a href=\"#为组件样式设置作用域\" class=\"headerlink\" title=\"为组件样式设置作用域\"></a>为组件样式设置作用域</h3><p><strong>对于应用来说，顶级 <code>App</code> 组件和布局组件中的样式可以是全局的，但是其它所有组件都应该是有作用域的</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**bad**/</span></span><br><span class=\"line\">&lt;<span class=\"selector-tag\">style</span>&gt;</span><br><span class=\"line\"><span class=\"selector-class\">.btn-close</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"><span class=\"comment\">/**good**/</span></span><br><span class=\"line\">&lt;<span class=\"selector-tag\">style</span> <span class=\"selector-tag\">scoped</span>&gt;</span><br><span class=\"line\"><span class=\"selector-class\">.button-close</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"强烈推荐\"><a href=\"#强烈推荐\" class=\"headerlink\" title=\"强烈推荐\"></a>强烈推荐</h2><h3 id=\"组件的顶级元素的顺序\"><a href=\"#组件的顶级元素的顺序\" class=\"headerlink\" title=\"组件的顶级元素的顺序\"></a>组件的顶级元素的顺序</h3><p><strong>单文件组件应该总是让 <code>&lt;script&gt;</code> 、<code>&lt;template&gt;</code>和 <code>&lt;style&gt;</code>标签的顺序保持一致。且 <code>&lt;style&gt;</code> 要放在最后，因为另外两个标签至少要有一个。</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//good</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\"><span class=\"comment\">/* ... */</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"><span class=\"comment\">/* ... */</span></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">//or</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"actionscript\"><span class=\"comment\">/* ... */</span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"><span class=\"comment\">/* ... */</span></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"JS-JSX-中的组件名大小写\"><a href=\"#JS-JSX-中的组件名大小写\" class=\"headerlink\" title=\"JS/JSX 中的组件名大小写\"></a>JS/JSX 中的组件名大小写</h3><p><strong>JS/JSX 中的组件名应该始终是 PascalCase 的，尽管在较为简单的应用中只使用 <code>Vue.component</code> 进行全局组件注册时，可以使用 kebab-case 字符串</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> myComponent <span class=\"keyword\">from</span> <span class=\"string\">'./MyComponent.vue'</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">'myComponent'</span>, &#123;&#125;)</span><br><span class=\"line\"><span class=\"comment\">//good</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> MyComponent <span class=\"keyword\">from</span> <span class=\"string\">'./MyComponent.vue'</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">'MyComponent'</span>, &#123;&#125;)</span><br><span class=\"line\">Vue.component(<span class=\"string\">'my-component'</span>, &#123;&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"紧密耦合的组件名\"><a href=\"#紧密耦合的组件名\" class=\"headerlink\" title=\"紧密耦合的组件名\"></a>紧密耦合的组件名</h3><p><strong>和父组件紧密耦合的子组件应该以父组件名作为前缀命名</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;bad</span><br><span class=\"line\">components&#x2F;</span><br><span class=\"line\">|- TodoList.vue</span><br><span class=\"line\">|- TodoItem.vue</span><br><span class=\"line\">|- TodoButton.vue</span><br><span class=\"line\">&#x2F;&#x2F;good</span><br><span class=\"line\">components&#x2F;</span><br><span class=\"line\">|- TodoList.vue</span><br><span class=\"line\">|- TodoListItem.vue</span><br><span class=\"line\">|- TodoListItemButton.vue</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"组件名中的单词顺序\"><a href=\"#组件名中的单词顺序\" class=\"headerlink\" title=\"组件名中的单词顺序\"></a>组件名中的单词顺序</h3><p><strong>组件名应该以高级别的 (通常是一般化描述的) 单词开头，以描述性的修饰词结尾。</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;bad</span><br><span class=\"line\">components&#x2F;</span><br><span class=\"line\">|- ClearSearchButton.vue</span><br><span class=\"line\">|- ExcludeFromSearchInput.vue</span><br><span class=\"line\">|- LaunchOnStartupCheckbox.vue</span><br><span class=\"line\">&#x2F;&#x2F;good</span><br><span class=\"line\">components&#x2F;</span><br><span class=\"line\">|- SearchButtonClear.vue</span><br><span class=\"line\">|- SearchInputExcludeGlob.vue</span><br><span class=\"line\">|- SettingsCheckboxLaunchOnStartup.vue</span><br></pre></td></tr></table></figure>\n<h3 id=\"组件选项顺序\"><a href=\"#组件选项顺序\" class=\"headerlink\" title=\"组件选项顺序\"></a>组件选项顺序</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- components</span><br><span class=\"line\">- props</span><br><span class=\"line\">- data</span><br><span class=\"line\">- computed</span><br><span class=\"line\">- created</span><br><span class=\"line\">- mounted</span><br><span class=\"line\">- metods</span><br><span class=\"line\">- filter</span><br><span class=\"line\">- watch</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"多个attribute的元素\"><a href=\"#多个attribute的元素\" class=\"headerlink\" title=\"多个attribute的元素\"></a>多个<code>attribute</code>的元素</h3><p><strong>多个 attribute 的元素应该分多行撰写，每个 attribute 一行。</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//bad</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span> <span class=\"attr\">foo</span>=<span class=\"string\">\"a\"</span> <span class=\"attr\">bar</span>=<span class=\"string\">\"b\"</span> <span class=\"attr\">baz</span>=<span class=\"string\">\"c\"</span>/&gt;</span></span><br><span class=\"line\">//good</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyComponent</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">foo</span>=<span class=\"string\">\"a\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">bar</span>=<span class=\"string\">\"b\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">baz</span>=<span class=\"string\">\"c\"</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"attribute的顺序\"><a href=\"#attribute的顺序\" class=\"headerlink\" title=\"attribute的顺序\"></a><code>attribute</code>的顺序</h3><p><strong>原生属性放在前面，指令放在后面</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- <span class=\"class\"><span class=\"keyword\">class</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">id</span>,<span class=\"title\">ref</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">name</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">data</span>-*</span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">src</span>, <span class=\"title\">for</span>, <span class=\"title\">type</span>, <span class=\"title\">href</span>,<span class=\"title\">value</span>,<span class=\"title\">maxlength</span>,<span class=\"title\">max</span>,<span class=\"title\">min</span>,<span class=\"title\">pattern</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">title</span>, <span class=\"title\">alt</span>，<span class=\"title\">placeholder</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">required</span>,<span class=\"title\">readonly</span>,<span class=\"title\">disabled</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">is</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">for</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">key</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">if</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">else</span>-<span class=\"title\">if</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">else</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">show</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">cloak</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">pre</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">once</span></span></span><br><span class=\"line\"><span class=\"class\">- <span class=\"title\">v</span>-<span class=\"title\">model</span></span></span><br><span class=\"line\">- v-bind,:</span><br><span class=\"line\">- v-on,@</span><br><span class=\"line\">- v-html</span><br><span class=\"line\">- v-text</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"模板中简单的表达式\"><a href=\"#模板中简单的表达式\" class=\"headerlink\" title=\"模板中简单的表达式\"></a>模板中简单的表达式</h3><p><strong>组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。(活用计算属性)</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;bad</span><br><span class=\"line\">fullName.split(&#39; &#39;).map(function (word) &#123;</span><br><span class=\"line\">  return word[0].toUpperCase() + word.slice(1);</span><br><span class=\"line\">&#125;).join(&#39; &#39;)</span><br><span class=\"line\">&#x2F;&#x2F;good</span><br><span class=\"line\">&#123;&#123; normalizedFullName &#125;&#125;</span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  normalizedFullName: function () &#123;</span><br><span class=\"line\">    return this.fullName.split(&#39; &#39;).map(function (word) &#123;</span><br><span class=\"line\">      return word[0].toUpperCase() + word.slice(1);</span><br><span class=\"line\">    &#125;).join(&#39; &#39;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用ES6风格编码\"><a href=\"#使用ES6风格编码\" class=\"headerlink\" title=\"使用ES6风格编码\"></a>使用ES6风格编码</h3><ul>\n<li><p>定义变量使用 let ,定义常量使用 const（涉及到块级作用域）</p>\n</li>\n<li><p>静态字符串一律使用单引号或反引号，动态字符串使用反引号</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"string\">'foobar'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> b = <span class=\"string\">'foo'</span> + a + <span class=\"string\">'bar'</span></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"string\">'foobar'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> b = <span class=\"string\">`foo<span class=\"subst\">$&#123;a&#125;</span>bar`</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> c = <span class=\"string\">'foobar'</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>数组或对象成员对变量赋值时，优先使用解构赋值</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数组解构赋值</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> first = arr[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"keyword\">const</span> second = arr[<span class=\"number\">1</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> [first, second] = arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h3 id=\"指令缩写\"><a href=\"#指令缩写\" class=\"headerlink\" title=\"指令缩写\"></a>指令缩写</h3><p><strong>指令缩写 (用 <code>:</code> 表示 <code>v-bind:</code>、用 <code>@</code> 表示 <code>v-on:</code> 和用 <code>#</code> 表示 <code>v-slot:</code>) 应该要么都用要么都不用。</strong></p>\n<h3 id=\"methods方法命名规范\"><a href=\"#methods方法命名规范\" class=\"headerlink\" title=\"methods方法命名规范\"></a><code>methods</code>方法命名规范</h3><ul>\n<li><strong>驼峰式命名，统一使用动词或者动词+名词形式</strong></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\">go、nextPage、show、open、login </span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\">jumpPage、openCarInfoDialog</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>请求数据的方法，以data结尾</strong></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\">takeData、confirmData、getList、postForm</span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\">getListData、postFormData</span><br></pre></td></tr></table></figure>\n<h2 id=\"禁用\"><a href=\"#禁用\" class=\"headerlink\" title=\"禁用\"></a>禁用</h2><h3 id=\"scoped中的元素选择器\"><a href=\"#scoped中的元素选择器\" class=\"headerlink\" title=\"scoped中的元素选择器\"></a>scoped中的元素选择器</h3><p><strong>元素选择器应该避免在 <code>scoped</code> 中出现</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//bad</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>X<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span></span><br><span class=\"line\">button &#123;</span><br><span class=\"line\">  background-color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">//good</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-close\"</span>&gt;</span>X<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.btn-close</span> &#123;</span></span><br><span class=\"line\">  background-color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"隐性的父子组件通信\"><a href=\"#隐性的父子组件通信\" class=\"headerlink\" title=\"隐性的父子组件通信\"></a>隐性的父子组件通信</h3><p><strong>应该优先通过 prop 和<code>this.$emit</code>进行父子组件之间的通信，而不是 <code>this.$parent</code> 或变更 prop</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//bad</span><br><span class=\"line\">Vue.component('TodoItem', &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    todo: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      required: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: '<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"todo.text\"</span>&gt;</span>'</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">Vue.component('TodoItem', &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    todo: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      required: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    removeTodo () &#123;</span><br><span class=\"line\">      var vm = this</span><br><span class=\"line\">      vm.$parent.todos = vm.$parent.todos.filter(function (todo) &#123;</span><br><span class=\"line\">        return todo.id !== vm.todo.id</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: `</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      &#123;&#123; todo.text &#125;&#125;</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"removeTodo\"</span>&gt;</span></span><br><span class=\"line\">        X</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  `</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//good</span><br><span class=\"line\">Vue.component('TodoItem', &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    todo: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      required: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: `</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:value</span>=<span class=\"string\">\"todo.text\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      @<span class=\"attr\">input</span>=<span class=\"string\">\"$emit('input', $event.target.value)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">  `</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">Vue.component('TodoItem', &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    todo: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      required: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: `</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      &#123;&#123; todo.text &#125;&#125;</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"$emit('delete')\"</span>&gt;</span></span><br><span class=\"line\">        X</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  `</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"Vue伪瀑布流的实现","date":"2020-05-20T16:00:00.000Z","keywords":null,"description":null,"top_img":null,"cover":"2020/05/21/vuePull/vue.png","_content":"# Vue伪瀑布流的实现\n\n> 我记得是去年暑假的时候，我的好基友给我们分享了一下瀑布流，当时没有认真听，结果今天遇见了，而且是跟vue结合的。\n\n**如果对传统的实现方法还不了解可以看一下这个[老哥](https://blog.csdn.net/zhinianling/article/details/97271944)的**\n\n> 思路：我中心屏幕分为n列，然后把数据分为n份，分别填充到列中。类似于入栈\n\n```html\n#list是你要分成几列\n#哦对了 我这是结合antd vue组件库使用的\n<a-row>\n  <a-col v-for=\"(value,key) in this.imagelist\" :key=\"key\" :span=\"24/list\">\n       <img\n         :alt=\"item.name\"\n         :src=\"$axios.defaults.baseURL + item.src\"\n         slot=\"cover\"\n         width=\"100%\"\n         style=\"border-radius: 3px\"\n        />        \n   </a-col>\n</a-row>\n```\n\n> 数据的格式（imagelist），看一下就会明白了\n\n```js\nimagelist={\n    0:[\n        {src:image.src}\n    ],\n    1:[\n        {src:image.src}\n    ],\n}\n//这样的话是分成了两列\n```\n\n> 弄到上面的话瀑布流已经出来了，但是根据窗口大小改变列数就要这么搞了\n\n```js\ndata(){\n    return{\n     \tscreenWidth: document.documentElement.clientWidth, //屏幕宽度\n    \tlist: null,   \n    }\n}\nmounted(){\n    window.onresize = () => {\n      // 定义窗口大小变更通知事件\n      this.screenWidth = document.documentElement.clientWidth; //窗口宽度\n    };\n}\nmethods：{\n    pandleWidth(val) {\n      if (val < 576) {\n        this.list = 1;\n      } else if (val >= 576 && val < 768) {\n        this.list = 2;\n      } else if (val >= 768 && val < 992) {\n        this.list = 3;\n      } else if (val >= 992 && val < 1200) {\n        this.list = 4;\n      } else {\n        this.list = 6;\n      }\n    }\n}\nwatch: {\n    screenWidth: function(val) {\n      //监听屏幕宽度变化\n      this.pandleWidth(val);\n    },\n    list: function() {\n        //监听变成几列\n      let count = 0;\n      this.imagelist = _.groupBy(this.images, () => {\n        count += 1;//_.groupBy是引用的lodash库中的方法\n        return (count - 1) % this.list;\n      });\n    }\n  }\n```\n\n> 现在就可以根据窗口大小改变列数了~，但是初始的this.list还没有设置\n\n```js\n this.$axios\n        .post(url, postData)\n        .then(res => {\n            this.images = [];//存最初的images列表\n            this.images = res.data.list;\n            this.pandleWidth(this.screenWidth);\n            let count = 0;\n            this.imagelist = _.groupBy(this.images, () => {\n              count += 1;\n              return (count - 1) % this.list;\n            });\n        })\n        .catch(err => {\n          this.$message.error(`网络错误：${err}`);\n          this.loading = false;\n        });\n```\n\n> 现在应该就ok了~温馨提示瀑布流在图片高度差距比较大的时候才好看。。。。否则还是比较low的。。。。","source":"_posts/vuePull.md","raw":"---\ntitle: Vue伪瀑布流的实现\ndate: 2020-05-21\ntags: [Vue]\ncategories: [Vue,瀑布流]\nkeywords:\ndescription:\ntop_img:\ncover: '2020/05/21/vuePull/vue.png'\n---\n# Vue伪瀑布流的实现\n\n> 我记得是去年暑假的时候，我的好基友给我们分享了一下瀑布流，当时没有认真听，结果今天遇见了，而且是跟vue结合的。\n\n**如果对传统的实现方法还不了解可以看一下这个[老哥](https://blog.csdn.net/zhinianling/article/details/97271944)的**\n\n> 思路：我中心屏幕分为n列，然后把数据分为n份，分别填充到列中。类似于入栈\n\n```html\n#list是你要分成几列\n#哦对了 我这是结合antd vue组件库使用的\n<a-row>\n  <a-col v-for=\"(value,key) in this.imagelist\" :key=\"key\" :span=\"24/list\">\n       <img\n         :alt=\"item.name\"\n         :src=\"$axios.defaults.baseURL + item.src\"\n         slot=\"cover\"\n         width=\"100%\"\n         style=\"border-radius: 3px\"\n        />        \n   </a-col>\n</a-row>\n```\n\n> 数据的格式（imagelist），看一下就会明白了\n\n```js\nimagelist={\n    0:[\n        {src:image.src}\n    ],\n    1:[\n        {src:image.src}\n    ],\n}\n//这样的话是分成了两列\n```\n\n> 弄到上面的话瀑布流已经出来了，但是根据窗口大小改变列数就要这么搞了\n\n```js\ndata(){\n    return{\n     \tscreenWidth: document.documentElement.clientWidth, //屏幕宽度\n    \tlist: null,   \n    }\n}\nmounted(){\n    window.onresize = () => {\n      // 定义窗口大小变更通知事件\n      this.screenWidth = document.documentElement.clientWidth; //窗口宽度\n    };\n}\nmethods：{\n    pandleWidth(val) {\n      if (val < 576) {\n        this.list = 1;\n      } else if (val >= 576 && val < 768) {\n        this.list = 2;\n      } else if (val >= 768 && val < 992) {\n        this.list = 3;\n      } else if (val >= 992 && val < 1200) {\n        this.list = 4;\n      } else {\n        this.list = 6;\n      }\n    }\n}\nwatch: {\n    screenWidth: function(val) {\n      //监听屏幕宽度变化\n      this.pandleWidth(val);\n    },\n    list: function() {\n        //监听变成几列\n      let count = 0;\n      this.imagelist = _.groupBy(this.images, () => {\n        count += 1;//_.groupBy是引用的lodash库中的方法\n        return (count - 1) % this.list;\n      });\n    }\n  }\n```\n\n> 现在就可以根据窗口大小改变列数了~，但是初始的this.list还没有设置\n\n```js\n this.$axios\n        .post(url, postData)\n        .then(res => {\n            this.images = [];//存最初的images列表\n            this.images = res.data.list;\n            this.pandleWidth(this.screenWidth);\n            let count = 0;\n            this.imagelist = _.groupBy(this.images, () => {\n              count += 1;\n              return (count - 1) % this.list;\n            });\n        })\n        .catch(err => {\n          this.$message.error(`网络错误：${err}`);\n          this.loading = false;\n        });\n```\n\n> 现在应该就ok了~温馨提示瀑布流在图片高度差距比较大的时候才好看。。。。否则还是比较low的。。。。","slug":"vuePull","published":1,"updated":"2020-05-21T09:28:06.819Z","_id":"ckagkb0ya000mlgff2x9bbxey","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Vue伪瀑布流的实现\"><a href=\"#Vue伪瀑布流的实现\" class=\"headerlink\" title=\"Vue伪瀑布流的实现\"></a>Vue伪瀑布流的实现</h1><blockquote>\n<p>我记得是去年暑假的时候，我的好基友给我们分享了一下瀑布流，当时没有认真听，结果今天遇见了，而且是跟vue结合的。</p>\n</blockquote>\n<p><strong>如果对传统的实现方法还不了解可以看一下这个<a href=\"https://blog.csdn.net/zhinianling/article/details/97271944\" target=\"_blank\" rel=\"noopener\">老哥</a>的</strong></p>\n<blockquote>\n<p>思路：我中心屏幕分为n列，然后把数据分为n份，分别填充到列中。类似于入栈</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#list是你要分成几列</span><br><span class=\"line\">#哦对了 我这是结合antd vue组件库使用的</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a-row</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a-col</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(value,key) in this.imagelist\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"key\"</span> <span class=\"attr\">:span</span>=<span class=\"string\">\"24/list\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">:alt</span>=<span class=\"string\">\"item.name\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">:src</span>=<span class=\"string\">\"$axios.defaults.baseURL + item.src\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">slot</span>=<span class=\"string\">\"cover\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">style</span>=<span class=\"string\">\"border-radius: 3px\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span>        </span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">a-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">a-row</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>数据的格式（imagelist），看一下就会明白了</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagelist=&#123;</span><br><span class=\"line\">    <span class=\"number\">0</span>:[</span><br><span class=\"line\">        &#123;<span class=\"attr\">src</span>:image.src&#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"number\">1</span>:[</span><br><span class=\"line\">        &#123;<span class=\"attr\">src</span>:image.src&#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//这样的话是分成了两列</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>弄到上面的话瀑布流已经出来了，但是根据窗口大小改变列数就要这么搞了</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">     \tscreenWidth: <span class=\"built_in\">document</span>.documentElement.clientWidth, <span class=\"comment\">//屏幕宽度</span></span><br><span class=\"line\">    \tlist: <span class=\"literal\">null</span>,   </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">mounted()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.onresize = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 定义窗口大小变更通知事件</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.screenWidth = <span class=\"built_in\">document</span>.documentElement.clientWidth; <span class=\"comment\">//窗口宽度</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">methods：&#123;</span><br><span class=\"line\">    pandleWidth(val) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (val &lt; <span class=\"number\">576</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.list = <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (val &gt;= <span class=\"number\">576</span> &amp;&amp; val &lt; <span class=\"number\">768</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.list = <span class=\"number\">2</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (val &gt;= <span class=\"number\">768</span> &amp;&amp; val &lt; <span class=\"number\">992</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.list = <span class=\"number\">3</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (val &gt;= <span class=\"number\">992</span> &amp;&amp; val &lt; <span class=\"number\">1200</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.list = <span class=\"number\">4</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.list = <span class=\"number\">6</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">watch: &#123;</span><br><span class=\"line\">    screenWidth: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">//监听屏幕宽度变化</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.pandleWidth(val);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    list: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//监听变成几列</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.imagelist = _.groupBy(<span class=\"keyword\">this</span>.images, () =&gt; &#123;</span><br><span class=\"line\">        count += <span class=\"number\">1</span>;<span class=\"comment\">//_.groupBy是引用的lodash库中的方法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (count - <span class=\"number\">1</span>) % <span class=\"keyword\">this</span>.list;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>现在就可以根据窗口大小改变列数了~，但是初始的this.list还没有设置</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.$axios</span><br><span class=\"line\">       .post(url, postData)</span><br><span class=\"line\">       .then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">this</span>.images = [];<span class=\"comment\">//存最初的images列表</span></span><br><span class=\"line\">           <span class=\"keyword\">this</span>.images = res.data.list;</span><br><span class=\"line\">           <span class=\"keyword\">this</span>.pandleWidth(<span class=\"keyword\">this</span>.screenWidth);</span><br><span class=\"line\">           <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">           <span class=\"keyword\">this</span>.imagelist = _.groupBy(<span class=\"keyword\">this</span>.images, () =&gt; &#123;</span><br><span class=\"line\">             count += <span class=\"number\">1</span>;</span><br><span class=\"line\">             <span class=\"keyword\">return</span> (count - <span class=\"number\">1</span>) % <span class=\"keyword\">this</span>.list;</span><br><span class=\"line\">           &#125;);</span><br><span class=\"line\">       &#125;)</span><br><span class=\"line\">       .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">this</span>.$message.error(<span class=\"string\">`网络错误：<span class=\"subst\">$&#123;err&#125;</span>`</span>);</span><br><span class=\"line\">         <span class=\"keyword\">this</span>.loading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">       &#125;);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>现在应该就ok了~温馨提示瀑布流在图片高度差距比较大的时候才好看。。。。否则还是比较low的。。。。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Vue伪瀑布流的实现\"><a href=\"#Vue伪瀑布流的实现\" class=\"headerlink\" title=\"Vue伪瀑布流的实现\"></a>Vue伪瀑布流的实现</h1><blockquote>\n<p>我记得是去年暑假的时候，我的好基友给我们分享了一下瀑布流，当时没有认真听，结果今天遇见了，而且是跟vue结合的。</p>\n</blockquote>\n<p><strong>如果对传统的实现方法还不了解可以看一下这个<a href=\"https://blog.csdn.net/zhinianling/article/details/97271944\" target=\"_blank\" rel=\"noopener\">老哥</a>的</strong></p>\n<blockquote>\n<p>思路：我中心屏幕分为n列，然后把数据分为n份，分别填充到列中。类似于入栈</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#list是你要分成几列</span><br><span class=\"line\">#哦对了 我这是结合antd vue组件库使用的</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a-row</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a-col</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(value,key) in this.imagelist\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"key\"</span> <span class=\"attr\">:span</span>=<span class=\"string\">\"24/list\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">:alt</span>=<span class=\"string\">\"item.name\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">:src</span>=<span class=\"string\">\"$axios.defaults.baseURL + item.src\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">slot</span>=<span class=\"string\">\"cover\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">style</span>=<span class=\"string\">\"border-radius: 3px\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span>        </span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">a-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">a-row</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>数据的格式（imagelist），看一下就会明白了</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">imagelist=&#123;</span><br><span class=\"line\">    <span class=\"number\">0</span>:[</span><br><span class=\"line\">        &#123;<span class=\"attr\">src</span>:image.src&#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"number\">1</span>:[</span><br><span class=\"line\">        &#123;<span class=\"attr\">src</span>:image.src&#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//这样的话是分成了两列</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>弄到上面的话瀑布流已经出来了，但是根据窗口大小改变列数就要这么搞了</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">     \tscreenWidth: <span class=\"built_in\">document</span>.documentElement.clientWidth, <span class=\"comment\">//屏幕宽度</span></span><br><span class=\"line\">    \tlist: <span class=\"literal\">null</span>,   </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">mounted()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.onresize = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 定义窗口大小变更通知事件</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.screenWidth = <span class=\"built_in\">document</span>.documentElement.clientWidth; <span class=\"comment\">//窗口宽度</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">methods：&#123;</span><br><span class=\"line\">    pandleWidth(val) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (val &lt; <span class=\"number\">576</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.list = <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (val &gt;= <span class=\"number\">576</span> &amp;&amp; val &lt; <span class=\"number\">768</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.list = <span class=\"number\">2</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (val &gt;= <span class=\"number\">768</span> &amp;&amp; val &lt; <span class=\"number\">992</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.list = <span class=\"number\">3</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (val &gt;= <span class=\"number\">992</span> &amp;&amp; val &lt; <span class=\"number\">1200</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.list = <span class=\"number\">4</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.list = <span class=\"number\">6</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">watch: &#123;</span><br><span class=\"line\">    screenWidth: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">//监听屏幕宽度变化</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.pandleWidth(val);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    list: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//监听变成几列</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.imagelist = _.groupBy(<span class=\"keyword\">this</span>.images, () =&gt; &#123;</span><br><span class=\"line\">        count += <span class=\"number\">1</span>;<span class=\"comment\">//_.groupBy是引用的lodash库中的方法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (count - <span class=\"number\">1</span>) % <span class=\"keyword\">this</span>.list;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>现在就可以根据窗口大小改变列数了~，但是初始的this.list还没有设置</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.$axios</span><br><span class=\"line\">       .post(url, postData)</span><br><span class=\"line\">       .then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">this</span>.images = [];<span class=\"comment\">//存最初的images列表</span></span><br><span class=\"line\">           <span class=\"keyword\">this</span>.images = res.data.list;</span><br><span class=\"line\">           <span class=\"keyword\">this</span>.pandleWidth(<span class=\"keyword\">this</span>.screenWidth);</span><br><span class=\"line\">           <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">           <span class=\"keyword\">this</span>.imagelist = _.groupBy(<span class=\"keyword\">this</span>.images, () =&gt; &#123;</span><br><span class=\"line\">             count += <span class=\"number\">1</span>;</span><br><span class=\"line\">             <span class=\"keyword\">return</span> (count - <span class=\"number\">1</span>) % <span class=\"keyword\">this</span>.list;</span><br><span class=\"line\">           &#125;);</span><br><span class=\"line\">       &#125;)</span><br><span class=\"line\">       .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">this</span>.$message.error(<span class=\"string\">`网络错误：<span class=\"subst\">$&#123;err&#125;</span>`</span>);</span><br><span class=\"line\">         <span class=\"keyword\">this</span>.loading = <span class=\"literal\">false</span>;</span><br><span class=\"line\">       &#125;);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>现在应该就ok了~温馨提示瀑布流在图片高度差距比较大的时候才好看。。。。否则还是比较low的。。。。</p>\n</blockquote>\n"},{"title":"Vue监听dom大小改变","date":"2020-05-21T09:24:12.000Z","keywords":null,"description":null,"top_img":null,"cover":"2020/05/21/vuePull/vue.png","_content":"### Vue监听dom大小改变\n> 需求描述：layout左边菜单栏收缩，右边的content区域的swiper宽度没有改变（没有图，朋友的问题，大体画一下）\n\n![大概的图片](vueReasize/test.png)\n\n> 类似于点击折叠左边目录会变小，右边内容区域会变大，但是swiper在刚开始的时候就确定了宽度，所以我的想法是监听右边宽度大小去updata一下。但是我用vue的watch监听$refs.swiper.offsetwidth失败了！！！！但是宽度确实是在改变的很费解，先说一下解决方法把\n\n### 1、使用[element-resize-detector](https://github.com/wnr/element-resize-detector)\n\n```js\nvar elementResizeDetectorMaker = require(\"element-resize-detector\")\nerd.listenTo(document.getElementById(\"swiper\"), function(element) {\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n  console.log(\"Size: \" + width + \"x\" + height);\n});\n//别为我为什么vue用getid。。我懒得改了。用ref获取dom也可以\n```\n\n### 2 、使用[ResizeObserver](https://developer.mozilla.org/zh-CN/docs/Web/API/ResizeObserver)\n\n```js\n    this.observer = new ResizeObserver(entries => {\n      entries.forEach(() => {\n        swiper.updata()\n      })\n    })\n    let content = document.getElementById('swiper')\n    this.observer.observe(content)\n```\n\n>至于为什么watch不能兼听我的宽度的问题。。我感觉是只能监听被双向绑定的数据，也就是MVVM的数据，比如我们经常用watch监听data和$route。但还是不太确定希望有大佬帮我~~~\n\n","source":"_posts/vueReasize.md","raw":"---\ntitle: Vue监听dom大小改变\ndate: 2020-05-21 17:24:12\ntags: [Vue Dom]\ncategories: [Vue,Resize]\nkeywords:\ndescription:\ntop_img:\ncover: '2020/05/21/vuePull/vue.png'\n---\n### Vue监听dom大小改变\n> 需求描述：layout左边菜单栏收缩，右边的content区域的swiper宽度没有改变（没有图，朋友的问题，大体画一下）\n\n![大概的图片](vueReasize/test.png)\n\n> 类似于点击折叠左边目录会变小，右边内容区域会变大，但是swiper在刚开始的时候就确定了宽度，所以我的想法是监听右边宽度大小去updata一下。但是我用vue的watch监听$refs.swiper.offsetwidth失败了！！！！但是宽度确实是在改变的很费解，先说一下解决方法把\n\n### 1、使用[element-resize-detector](https://github.com/wnr/element-resize-detector)\n\n```js\nvar elementResizeDetectorMaker = require(\"element-resize-detector\")\nerd.listenTo(document.getElementById(\"swiper\"), function(element) {\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n  console.log(\"Size: \" + width + \"x\" + height);\n});\n//别为我为什么vue用getid。。我懒得改了。用ref获取dom也可以\n```\n\n### 2 、使用[ResizeObserver](https://developer.mozilla.org/zh-CN/docs/Web/API/ResizeObserver)\n\n```js\n    this.observer = new ResizeObserver(entries => {\n      entries.forEach(() => {\n        swiper.updata()\n      })\n    })\n    let content = document.getElementById('swiper')\n    this.observer.observe(content)\n```\n\n>至于为什么watch不能兼听我的宽度的问题。。我感觉是只能监听被双向绑定的数据，也就是MVVM的数据，比如我们经常用watch监听data和$route。但还是不太确定希望有大佬帮我~~~\n\n","slug":"vueReasize","published":1,"updated":"2020-05-22T08:31:14.235Z","_id":"ckagkj7ch000nlgff8szzgdpb","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"Vue监听dom大小改变\"><a href=\"#Vue监听dom大小改变\" class=\"headerlink\" title=\"Vue监听dom大小改变\"></a>Vue监听dom大小改变</h3><blockquote>\n<p>需求描述：layout左边菜单栏收缩，右边的content区域的swiper宽度没有改变（没有图，朋友的问题，大体画一下）</p>\n</blockquote>\n<p><img src=\"/2020/05/21/vueReasize/test.png\" alt=\"大概的图片\"></p>\n<blockquote>\n<p>类似于点击折叠左边目录会变小，右边内容区域会变大，但是swiper在刚开始的时候就确定了宽度，所以我的想法是监听右边宽度大小去updata一下。但是我用vue的watch监听$refs.swiper.offsetwidth失败了！！！！但是宽度确实是在改变的很费解，先说一下解决方法把</p>\n</blockquote>\n<h3 id=\"1、使用element-resize-detector\"><a href=\"#1、使用element-resize-detector\" class=\"headerlink\" title=\"1、使用element-resize-detector\"></a>1、使用<a href=\"https://github.com/wnr/element-resize-detector\" target=\"_blank\" rel=\"noopener\">element-resize-detector</a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> elementResizeDetectorMaker = <span class=\"built_in\">require</span>(<span class=\"string\">\"element-resize-detector\"</span>)</span><br><span class=\"line\">erd.listenTo(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"swiper\"</span>), <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">element</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> width = element.offsetWidth;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> height = element.offsetHeight;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Size: \"</span> + width + <span class=\"string\">\"x\"</span> + height);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//别为我为什么vue用getid。。我懒得改了。用ref获取dom也可以</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-、使用ResizeObserver\"><a href=\"#2-、使用ResizeObserver\" class=\"headerlink\" title=\"2 、使用ResizeObserver\"></a>2 、使用<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/ResizeObserver\" target=\"_blank\" rel=\"noopener\">ResizeObserver</a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.observer = <span class=\"keyword\">new</span> ResizeObserver(<span class=\"function\"><span class=\"params\">entries</span> =&gt;</span> &#123;</span><br><span class=\"line\">  entries.forEach(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    swiper.updata()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">let</span> content = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'swiper'</span>)</span><br><span class=\"line\"><span class=\"keyword\">this</span>.observer.observe(content)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>至于为什么watch不能兼听我的宽度的问题。。我感觉是只能监听被双向绑定的数据，也就是MVVM的数据，比如我们经常用watch监听data和$route。但还是不太确定希望有大佬帮我<del>~</del></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Vue监听dom大小改变\"><a href=\"#Vue监听dom大小改变\" class=\"headerlink\" title=\"Vue监听dom大小改变\"></a>Vue监听dom大小改变</h3><blockquote>\n<p>需求描述：layout左边菜单栏收缩，右边的content区域的swiper宽度没有改变（没有图，朋友的问题，大体画一下）</p>\n</blockquote>\n<p><img src=\"/2020/05/21/vueReasize/test.png\" alt=\"大概的图片\"></p>\n<blockquote>\n<p>类似于点击折叠左边目录会变小，右边内容区域会变大，但是swiper在刚开始的时候就确定了宽度，所以我的想法是监听右边宽度大小去updata一下。但是我用vue的watch监听$refs.swiper.offsetwidth失败了！！！！但是宽度确实是在改变的很费解，先说一下解决方法把</p>\n</blockquote>\n<h3 id=\"1、使用element-resize-detector\"><a href=\"#1、使用element-resize-detector\" class=\"headerlink\" title=\"1、使用element-resize-detector\"></a>1、使用<a href=\"https://github.com/wnr/element-resize-detector\" target=\"_blank\" rel=\"noopener\">element-resize-detector</a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> elementResizeDetectorMaker = <span class=\"built_in\">require</span>(<span class=\"string\">\"element-resize-detector\"</span>)</span><br><span class=\"line\">erd.listenTo(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"swiper\"</span>), <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">element</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> width = element.offsetWidth;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> height = element.offsetHeight;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Size: \"</span> + width + <span class=\"string\">\"x\"</span> + height);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//别为我为什么vue用getid。。我懒得改了。用ref获取dom也可以</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-、使用ResizeObserver\"><a href=\"#2-、使用ResizeObserver\" class=\"headerlink\" title=\"2 、使用ResizeObserver\"></a>2 、使用<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/ResizeObserver\" target=\"_blank\" rel=\"noopener\">ResizeObserver</a></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.observer = <span class=\"keyword\">new</span> ResizeObserver(<span class=\"function\"><span class=\"params\">entries</span> =&gt;</span> &#123;</span><br><span class=\"line\">  entries.forEach(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    swiper.updata()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">let</span> content = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'swiper'</span>)</span><br><span class=\"line\"><span class=\"keyword\">this</span>.observer.observe(content)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>至于为什么watch不能兼听我的宽度的问题。。我感觉是只能监听被双向绑定的数据，也就是MVVM的数据，比如我们经常用watch监听data和$route。但还是不太确定希望有大佬帮我<del>~</del></p>\n</blockquote>\n"}],"PostAsset":[{"_id":"source/_posts/life20200519/life.jpg","slug":"life.jpg","post":"ckagcs0q20000h4fffy90ez63","modified":0,"renderable":0},{"_id":"source/_posts/vuePull/vue.png","slug":"vue.png","post":"ckagkb0ya000mlgff2x9bbxey","modified":0,"renderable":0},{"_id":"source/_posts/vueReasize/test.png","slug":"test.png","post":"ckagkj7ch000nlgff8szzgdpb","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckagcs0q20000h4fffy90ez63","category_id":"ckagczanb0000xgffgi2d9x6o","_id":"ckagczani0003xgff2cxu69ob"},{"post_id":"ckagh1vmz0000lgffftyxa9nc","category_id":"ckagknb4d000qlgff5640daaa","_id":"ckagknon4000zlgffeh14fsa3"},{"post_id":"ckagh1vmz0000lgffftyxa9nc","category_id":"ckagknon3000ylgfffo6j19lr","_id":"ckagknon50010lgff86y82n21"},{"post_id":"ckagkb0ya000mlgff2x9bbxey","category_id":"ckagknb4d000qlgff5640daaa","_id":"ckagko88d0012lgff2p2n5ra6"},{"post_id":"ckagkb0ya000mlgff2x9bbxey","category_id":"ckagko88d0011lgffd32y4b95","_id":"ckagko88d0013lgff33qm6xef"},{"post_id":"ckagkj7ch000nlgff8szzgdpb","category_id":"ckagknb4d000qlgff5640daaa","_id":"ckagkp1rq0017lgff1ji1efa7"},{"post_id":"ckagkj7ch000nlgff8szzgdpb","category_id":"ckagkp1rm0016lgff28rn5dnq","_id":"ckagkp1rr0018lgff23cyf0qb"}],"PostTag":[{"post_id":"ckagcs0q20000h4fffy90ez63","tag_id":"ckagczang0001xgff35zchx36","_id":"ckagczanh0002xgffc6v9g6v6"},{"post_id":"ckagh1vmz0000lgffftyxa9nc","tag_id":"ckagh4usc0002lgff3z32e8u8","_id":"ckagh4usi0005lgffaq81bmwg"},{"post_id":"ckagh1vmz0000lgffftyxa9nc","tag_id":"ckagh4use0003lgffc5bzgtar","_id":"ckagh4usi0006lgffcbyv7msv"},{"post_id":"ckagkj7ch000nlgff8szzgdpb","tag_id":"ckagknb4d000rlgff86cz68jg","_id":"ckagknb4e000slgffd6fy7m1j"},{"post_id":"ckagkb0ya000mlgff2x9bbxey","tag_id":"ckagknkry000vlgfff6j6h8qx","_id":"ckagknkry000wlgffc6nsbqd4"}],"Tag":[{"name":"生活","_id":"ckagczang0001xgff35zchx36"},{"name":"vue","_id":"ckagh4usc0002lgff3z32e8u8"},{"name":"规范","_id":"ckagh4use0003lgffc5bzgtar"},{"name":"Vue Dom","_id":"ckagknb4d000rlgff86cz68jg"},{"name":"Vue","_id":"ckagknkry000vlgfff6j6h8qx"}]}}